<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Eunhan's library</title><link>https://eunhanlee.github.io/</link><description>Recent content on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Mon, 12 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>[JAVA code]for loop</title><link>https://eunhanlee.github.io/post/java-codefor-loop/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codefor-loop/</guid><description> variables in for statement will not keep memory after loop is finished
break : finish the whole loop
continue : skip last and move to next loop
0~9 loop
for (int i = 0; i &amp;lt; 10; i++) { } 10~0 loop for (int i = 10; i &amp;gt; -1; i--) { } only read the arr, cannot modify for (String str : arr) { }</description></item><item><title>[JAVA code]get Fibonacci nth number</title><link>https://eunhanlee.github.io/post/java-codeget-fibonacci-nth-number/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codeget-fibonacci-nth-number/</guid><description>math public int fib(int N) { double goldenRatio = (1 + Math.sqrt(5)) / 2; return (int)Math.round(Math.pow(goldenRatio, N)/ Math.sqrt(5)); } recuresive unsigned int fibonacci_rcsv(unsigned int n) { if (n == 0) return 0; else if (n == 1) return 1; else return fibonacci_rcsv(n - 2) + fibonacci_rcsv(n - 1); } Repeat unsigned int fibonacci_iter(unsigned int n) { if (n == 0) return 0; else if (n == 1) return 1; else { int result = 0; int iterA = 0; int iterB = 1; for (int i = 2; i &amp;lt;= n; i++) { result = iterA + iterB; iterA = iterB; iterB = result; } return result; } }</description></item><item><title>[JAVA code]hashmap</title><link>https://eunhanlee.github.io/post/java-codehashmap/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codehashmap/</guid><description>private HashMap&amp;lt;Character, Character&amp;gt; map; this.map = new HashMap&amp;lt;&amp;gt;(); HashMap&amp;lt;String,String&amp;gt; map = new HashMap&amp;lt;&amp;gt;(map1);// HashMap that has same key and values as map1 HashMap&amp;lt;String,String&amp;gt; map2 = new HashMap&amp;lt;&amp;gt;(10);// set capacity defult is 16 map.put(&amp;#34;a&amp;#34;,&amp;#34;b&amp;#34;); //add map.get(&amp;#34;a&amp;#34;);//if not there, return null map.getOrDefault(&amp;#34;a&amp;#34;,&amp;#34;no value&amp;#34;);//if not there, return 2nd parameter &amp;#34;no value&amp;#34; map.isEmpty()//T or F for all data map.size() //return how may keys map.containsKey( key )//check key is there map.containsValue( value )//check value is there map.</description></item><item><title>[JAVA code]int reverse</title><link>https://eunhanlee.github.io/post/java-codeint-reverse/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codeint-reverse/</guid><description>int reverse without using string Time complexity : $O(n)$ Space complexity : $O(1)$ public static int reverseInt(int input) { int output = 0; int length = ((int) (Math.log10(input)) + 1); for (int i = 0; i &amp;lt; length; ++i) { output = output * 10 + input % 10; input = input / 10; } return output; }</description></item><item><title>[JAVA code]switch</title><link>https://eunhanlee.github.io/post/java-codeswitch/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codeswitch/</guid><description>public static int getNum(char s) { return switch (s) { case &amp;#39;I&amp;#39; -&amp;gt; 1; case &amp;#39;V&amp;#39; -&amp;gt; 5; case &amp;#39;X&amp;#39; -&amp;gt; 10; case &amp;#39;L&amp;#39; -&amp;gt; 50; case &amp;#39;C&amp;#39; -&amp;gt; 100; case &amp;#39;D&amp;#39; -&amp;gt; 500; case &amp;#39;M&amp;#39; -&amp;gt; 1000; default -&amp;gt; 0; }; }</description></item><item><title>[Java]Primitive type and Reference type</title><link>https://eunhanlee.github.io/post/javaprimitive-type-and-reference-type/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/javaprimitive-type-and-reference-type/</guid><description>Primitive type JAVA provides 8 kinds of Primitive type There is no null value. Defult value is already inserted. actual value will saved in Stack memory. String is object. Not primitive type. Data Type Allocated Memory Defult Value Range of Data Range of Data in Number boolean 1 byte false true, false byte 1 byte 0 -127 ~ 128 $-2^{7}$~ $(2^{7}-1)$ short 2 byte 0 -32,768 ~ 32,767 $-2^{15}$~ $(2^{15}-1)$ int 4 byte 0 -2,147,483,648 ~ 2,147,483,647 $-2^{31}$~ $(2^{31}-1)$ long 8 byte 0L -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807 $-2^{63}$~ $(2^{63}-1)$ float 4 byte 0.</description></item><item><title>Best Time to Buy and Sell Stock</title><link>https://eunhanlee.github.io/post/best-time-to-buy-and-sell-stock/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/best-time-to-buy-and-sell-stock/</guid><description>Problem Problem_Link
1 hour limit no search on internet Say you have an array for which the ith element is the price of a given stock on day i.
If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.
Note that you cannot sell a stock before you buy one.</description></item><item><title>Fibonacci sequence</title><link>https://eunhanlee.github.io/post/fibonacci-sequence/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/fibonacci-sequence/</guid><description>Definition Certain patterns of numbers.
first and second numbers are always 0,1. next number is addition of previous two numbers
Recurrence Relation $F_0=0$
$F_1=1$
$F_n=F_{n-1}+F_{n-2}$
Example index fibonacci numbers calculation 0 0 0 1 1 1 2 1 0+1 3 2 1+1 4 3 1+2 5 5 2+3 6 8 3+5 7 13 5+8 8 21 8+13 9 34 13+21 10 55 21+34 11 89 34+55 12 144 55+89 13 233 89+144 14 377 144+233 15 610 233+377 16 987 377+610 get nth fibonacci number Repeat unsigned int fibonacci_iter(unsigned int n) { if (n == 0) return 0; else if (n == 1) return 1; else { int result = 0; int iterA = 0; int iterB = 1; for (int i = 2; i &amp;lt;= n; i++) { result = iterA + iterB; iterA = iterB; iterB = result; } return result; } } recuresive unsigned int fibonacci_rcsv(unsigned int n) { if (n == 0) return 0; else if (n == 1) return 1; else return fibonacci_rcsv(n - 2) + fibonacci_rcsv(n - 1); } math public int fib(int N) { double goldenRatio = (1 + Math.</description></item><item><title>i++ vs. ++i prefix operator and postfix operator</title><link>https://eunhanlee.github.io/post/i++-vs.-++i-prefix-operator-and-postfix-operator/</link><pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/i++-vs.-++i-prefix-operator-and-postfix-operator/</guid><description>code name How ++i prefix increment operator i = i+1;return i; i++ postfix increment operator final int t = i; i = i+1; return t; &amp;ndash;i prefix decrement operator i = i-1;return i; i&amp;ndash; postfix decrement operator final int t = i; i = i-1; return t; int x = 2; int y = 2; System.</description></item><item><title>stable vs. unstable sorts</title><link>https://eunhanlee.github.io/post/stable-vs.-unstable-sorts/</link><pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/stable-vs.-unstable-sorts/</guid><description>Definition Stable and unstable is depend on how sort any duplicated list.
If the algorithm keeps original position of duplicated values, it is stable sort algorithm
If the algorithm positioned duplicated values randomly, it is unstable sort algorithm
Example raw list=[3(1), 7(1), 3(2), 4, 7(2), 9]
table sorted list=[3(1), 3(2), 4, 7(1), 7(2), 9]
unstable sorted list=[3(2), 3(1), 4, 7(2), 7(1), 9]
Stable Sorting Bubble Sort
Insertion Sort
Merge Sort</description></item><item><title>[JAVA code]Lexicographical order</title><link>https://eunhanlee.github.io/post/java-codelexicographical-order/</link><pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codelexicographical-order/</guid><description> Time complexity : $O(n\ log\ n)$ Space complexity : $O(1)$ Collections.sort(List&amp;lt;String&amp;gt;_values); Arrays.sort(String[]array); Time complexity : $O(n^2)$ Space complexity : $O(1)$ public static String[] LexicalOrder(String[] words) { int n = words.length; for (int i = 0; i &amp;lt; n - 1; ++i) { for (int j = i + 1; j &amp;lt; n; ++j) { if (words[i].compareTo(words[j]) &amp;gt; 0) { String temp = words[i]; words[i] = words[j]; words[j] = temp; } } } return words; }</description></item><item><title>what happen if + or - with Char in JAVA</title><link>https://eunhanlee.github.io/post/what-happen-if-+-or-with-char-in-java/</link><pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-happen-if-+-or-with-char-in-java/</guid><description>Result code result char type + int type return unicode char type - int type error int type + char type return unicode int type - char type error char type + char type return unicode char type - char type return unicode String is not Primitive Data Type. This is object example of use For lexicographical order for (int i = 0; i &amp;lt; order.</description></item><item><title>[JAVA code]reverse node</title><link>https://eunhanlee.github.io/post/java-codereverse-linkedlist/</link><pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codereverse-linkedlist/</guid><description> Time complexity : $O(n)$ Space complexity : $O(1)$ public static ListNode reverse(ListNode head) { ListNode prev = null; while (head != null) { ListNode next = head.next; head.next = prev; prev = head; head = next; } return prev; }</description></item><item><title>[Java] what is difference between Error and Exception in JAVA</title><link>https://eunhanlee.github.io/post/what-is-difference-between-error-and-exception-in-java/</link><pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-difference-between-error-and-exception-in-java/</guid><description>What is Error Programs run something that is not what programmers wanted or shutdown unexpectedly.
Any causes of that action are Error.
Kinds of Errors compile-time error compile failed. usually, wrong lanuage keyword used. python does not understand &amp;quot;System.out.println&amp;quot; This code is for JAVA.
runtime error crash during the programs run. put values in int arr[5] that array size is 3
logical error programmer created wrong process. you wanted to put blue in variable x.</description></item><item><title>Dynamic Programming</title><link>https://eunhanlee.github.io/post/dynamic-programming/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/dynamic-programming/</guid><description>Definition algorithmic problem solving technique that split into many simple subproblems and reduce steps of subproblems. In other wards, separates into subproblems and get solution by addition of all subproblems.
Example if you calculate $2^1+2^2+2^3+2^4+2^5$ and display each numbers,
$2^1=2=2$
$2^2=2+2=2^1+2$
$2^3=2+2+2=2^2+2$
$2^4=2+2+2+2=2^3+2$
$2^5=2+2+2+2+2=2^4+2$
since you need to calculate each of numbers ($2^1,2^2,2^3,2^4,2^5$), you can skip some of parts that you already calculated. When you calculate the $2^5$, you done have to calculate $2^4$ if that number $2^4$ is already calculated.</description></item><item><title>inclusive and exclusive</title><link>https://eunhanlee.github.io/post/inclusive-and-exclusive/</link><pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/inclusive-and-exclusive/</guid><description>Inclusive - Including the last number
Exclusive - Excluding the last number
In Computer Science, inclusive/exclusive apply to a number range
Example inclusive If a function will compute \(2^i\) where \(i = 1, 2, ..., n\).
\(i\) can have values from 1 up to and including the value n.
We says, n is Included in Inclusive
1 through 10 (inclusive) = [1, 10] 1 2 3 4 5 6 7 8 9 10 exclusive If a function will compute $2^i$ where i = 1, 2, .</description></item><item><title>Two Sum</title><link>https://eunhanlee.github.io/post/two-sum/</link><pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/two-sum/</guid><description>Problem [Problem_Link]
Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order.
Example 1:
Input: nums = [2,7,11,15], target = 9 Output: [0,1] Output: Because nums[0] + nums[1] == 9, we return [0, 1].</description></item><item><title>about</title><link>https://eunhanlee.github.io/about/</link><pubDate>Sun, 28 Mar 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/about/</guid><description>EUNHAN LEE (C) 571-294-2589 e-mail LinkedIn
Education Bachelor of Science, Computer Science Sep. 2018 – Fall 2020
George Mason University, Fairfax, Virginia
Related Experience Projects or Works Languages hat program on Android by using PubNub API JAVA, Android Communication with manufacturing Communication Checking new files uploaded on Dropbox by using Dropbox API JAVA, Android Experience Volunteer, Open Community Project March 2017 - Aug.</description></item></channel></rss>