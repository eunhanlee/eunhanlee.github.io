<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Eunhan's library</title><link>https://eunhanlee.github.io/post/</link><description>Recent content in Posts on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Thu, 06 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>The Bast Loop Statement Out Of For, While, Recursion</title><link>https://eunhanlee.github.io/post/the-bast-loop-statement-out-of-for-while-recursion/</link><pubDate>Thu, 06 Jan 2022 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/the-bast-loop-statement-out-of-for-while-recursion/</guid><description>Purpose Most programming languages provide for, while, recursion loop statements. Which one is best?
for I know how many repeat needed Cannot repeat with certain condition (need to use if and break) Hard to use previous result to next repeated loop Good usage example : print numbers in array. while I do not know how many repeat needed repeat with certain condition Hard to use previous result to next repeated loop Good usage example : count how may words you typed recursion I know how many Stack Memory that will use repeat with certain condition Easy to use previous result to next repeated loop Good usage example: find 88th&amp;rsquo;s Fibonacci number additional considerable conditions Does your programming language provide tail recursion Program environment such as embedded, Android, or Web Conclusion</description></item><item><title>personal blog with Hugo-5.add github action</title><link>https://eunhanlee.github.io/post/personal-blog-with-hugo-5.add-github-action/</link><pubDate>Tue, 28 Dec 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/personal-blog-with-hugo-5.add-github-action/</guid><description>Purpose Create personal blog with Hugo and hosting with github at Windows 10. For this purpose, you need knowledge of HTML, Markdown, and Hugo structure. If you knwo golang, css, js, that will be better. But you do not have to.
used tools install date : 03-31-2021 hugo version : hugo v0.82.0 git version : git version 2.31.1.windows.1 windows : 10 windows terminal: v1.7.572.0 Chocolatey : v0.10.15 add github action I finished build github website with Hugo.</description></item><item><title>personal blog with Hugo-4. hosting by github</title><link>https://eunhanlee.github.io/post/personal-blog-with-hugo-4.-hosting-by-github/</link><pubDate>Mon, 27 Dec 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/personal-blog-with-hugo-4.-hosting-by-github/</guid><description>Purpose Create personal blog with Hugo and hosting with github at Windows 10. For this purpose, you need knowledge of HTML, Markdown, and Hugo structure. If you knwo golang, css, js, that will be better. But you do not have to.
used tools install date : 03-31-2021 hugo version : hugo v0.82.0 git version : git version 2.31.1.windows.1 windows : 10 windows terminal: v1.7.572.0 Chocolatey : v0.10.15 upload to github create two repository on github 1st repository: actual Hugo code will be here 2nd repository: Hugo render the 1st repository data into HTML The github will host 2nd repository to show on online.</description></item><item><title>what is comparable in Java</title><link>https://eunhanlee.github.io/post/what-is-comparable-in-java/</link><pubDate>Thu, 09 Dec 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-comparable-in-java/</guid><description>Hierarchy package: java.lang.Comparable
Definition Sorting interface that designed for a condition by overriding compareTo method. For example, you can sort list in ascending order of size.
about the compareTo() method if compareTo() method return positive number, swap the input parameters
else will be remain same
condition return First parameter &amp;lt; second parameter negative First parameter == second parameter 0 First parameter &amp;gt; second parameter positive How to use customObject implements Comparable&amp;lt;&amp;gt;</description></item><item><title>what is comparator in Java</title><link>https://eunhanlee.github.io/post/what-is-comparator-in-java/</link><pubDate>Thu, 09 Dec 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-comparator-in-java/</guid><description>Hierarchy package: java.util.Comparator
Definition Sorting interface that designed for mutiple special conditions by creating compare method. For example, you can sort list in ascending order of size and descending order of letters.
about the compare() method if compare() method return positive number, swap the input parameters
else will be remain same
condition return First parameter &amp;lt; second parameter negative First parameter == second parameter 0 First parameter &amp;gt; second parameter positive How to use MyComparator implements Comparator&amp;lt;&amp;gt;</description></item><item><title>what is iterator in Java</title><link>https://eunhanlee.github.io/post/what-is-iterator-in-java/</link><pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-iterator-in-java/</guid><description>Definition Interface that can read any class in the collection framework.
Thus, we can read arraylist or linkedlist or hashmap with iterator.
why we use iterator? Since we can read any list or set with iterator, we do not have to fix or change code when you work with big projects.
Hierarchy method hasNext() next() remove()
method Example List list = new ArrayList();// arrayList list.add(&amp;#34;1&amp;#34;); list.add(&amp;#34;2&amp;#34;); list.add(&amp;#34;3&amp;#34;); Iterator &amp;lt;string&amp;gt; itr = list.</description></item><item><title>[Excel Function] How to add text in cells</title><link>https://eunhanlee.github.io/post/excel-function-how-to-add-text-in-cells/</link><pubDate>Fri, 19 Nov 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/excel-function-how-to-add-text-in-cells/</guid><description>Add texts in cells Method 1: &amp;ldquo;&amp;amp;&amp;rdquo; =[cell information]&amp;amp;[cell information]
Method 1 Example Method 2: &amp;ldquo;concatenate()&amp;rdquo; =CONCATENATE([cell information],[cell information])
Method 2 Example</description></item><item><title>conditional and loop statement in Python-if, for, while</title><link>https://eunhanlee.github.io/post/conditional-statement-and-loop-statement-in-python-if-for-while/</link><pubDate>Thu, 18 Nov 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/conditional-statement-and-loop-statement-in-python-if-for-while/</guid><description>conditional statement and loop statement in Python conditional statement (if statement) One Condition Keyword: if if [condition] : [space]code you want to learn
Multiple Condition Keyword: elif if must there before use elif if [condition] : [space]code you want to learn elif [condition] : [space]code you want to learn elif [condition] : [space]code you want to learn Other than Condition Keyword: else if must there before use else if [condition] : [space]code you want to learn else : [space]code you want to learn if Statement Example a = 3 if a &amp;gt; 5: print(&amp;#34;a is bigger than 5&amp;#34;) elif a &amp;gt; 0: print(&amp;#34;a is bigger than 0 but smaller than 5&amp;#34;) else: print(&amp;#34;a is negative&amp;#34;) Loop Statement (for Statement) Repeat Example 10 times loop for i in range(10): print(&amp;#34;Hi&amp;#34;) list loop Example Repeat as much as elements in list a = [&amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;C&amp;#34;] for i in a: print(i) # A B C list loop with index Example Repeat as much as elements in list for i, j in enumerate(a): print(i, &amp;#34;:&amp;#34;, j) # 0 : A # 1 : B # 2 : C add two list and loop Example The pair&amp;rsquo;s data type is tuple numbers = [9, 7, 7] letters = [&amp;#34;z&amp;#34;, &amp;#34;x&amp;#34;, &amp;#34;y&amp;#34;] for pair in zip(numbers, letters): print(pair) # (9, &amp;#39;z&amp;#39;) # (7, &amp;#39;x&amp;#39;) # (7, &amp;#39;y&amp;#39;) Loop with certain index Example 5 to 9 for i in range(5, 10): # 5 ~ 9 print(&amp;#34;Hello&amp;#34;, i) # Hello 5 # Hello 6 # Hello 7 # Hello 8 # Hello 9 loop until certain condition loop until i is &amp;ldquo;o&amp;rdquo; a = &amp;#34;balloon&amp;#34; for i in a: print(i) if i == &amp;#34;o&amp;#34;: break # b a l l o Loop Statement (while Statement) loop until certain condition loop until i is bigger than 5 i = 0 while i &amp;lt; 5: print(i) i = i + 1 # 0 1 2 3 4</description></item><item><title>Set of Data Structures in Python</title><link>https://eunhanlee.github.io/post/set-of-data-structures-in-python/</link><pubDate>Wed, 17 Nov 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/set-of-data-structures-in-python/</guid><description>Set Definition One of the data structure in python. Create set of data Data Structures in Python List: Tuple: ( ) Dictionary: { key : value } set: { } declaration use { and } to declare setA={1,3,4,&amp;#34;test&amp;#34;} # {1, &amp;#39;test&amp;#39;, 3, 4} setB={2,4,&amp;#34;test&amp;#34;,5,6} # {2, &amp;#39;test&amp;#39;, 4, 5, 6} Characteristics No duplicated value Do not care about order set algebra(union, intersection, difference, symmetric difference) Set Algebra union Keyword: &amp;ldquo;|&amp;rdquo;, &amp;ldquo;union()&amp;rdquo;</description></item><item><title>Hash Algorithm - Hash Crash</title><link>https://eunhanlee.github.io/post/hash-algorithm-hash-crash/</link><pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/hash-algorithm-hash-crash/</guid><description>Definition one of problems while using the hash algorithm. If the input value is different, the output value should be different. But, the output is same. We calls, &amp;ldquo;Hash Crash&amp;rdquo;
Characteristics less hash crush is better hash algorithm No hash crush is almost impossible. Example [input]-&amp;gt;[output]
A-&amp;gt;03 B-&amp;gt;02 C-&amp;gt;03
The output of A and C are same. This is hash crush.
solution Most hash algorithm search next output when hash crush happen.</description></item><item><title>Hash Algorithm - Uniformity</title><link>https://eunhanlee.github.io/post/hash-algorithm-uniformity/</link><pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/hash-algorithm-uniformity/</guid><description>Definition one of properties for Hash algorithm map the expected inputs as evenly as possible over its output range without hash crash.
Example [input]-&amp;gt;[output]
first hash algorithm A-&amp;gt;03 B-&amp;gt;02 C-&amp;gt;03
second hash algorithm A-&amp;gt;01 B-&amp;gt;02 C-&amp;gt;03
explanation if the uniformity of hash algorithm is high, it less create hash crush. Thus, the second hash algorithm&amp;rsquo;s uniformity is higher than the first hash algorithm
conclusion high uniformity = less hash crush = higher possible to learn with O(1) of time complexity other questions Can we possible to make perfect hash algorithm that does not make any hash crush?</description></item><item><title>Hash Algorithm</title><link>https://eunhanlee.github.io/post/hash-algorithm/</link><pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/hash-algorithm/</guid><description>Definition hash function transfer any value to certain conditioned value such as length. If the input value is same, the output value should be same.
In use encryption Hashtable is using hash function to store values quickly. Comparing two huge data to verify same file or not quickly. Kinds cryptographic hash function : hash function that used for encryption hash function : hash function that does not used for encryption Properties efficiency uniformity collision resistance pre-image resistance second pre-image resistance</description></item><item><title>Dictionary of Data Structures in Python</title><link>https://eunhanlee.github.io/post/dictionary-of-data-structures-in-python/</link><pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/dictionary-of-data-structures-in-python/</guid><description>Dictionary Definition One of the data structure in python. has key and value bined. You can fine value when you know the key very slimier with hashmap Data Structures in Python List Tuple Dictionary set declaration use { and } to declare the value can be list the key can be int or string. But not list. (TypeError: unhashable type: &amp;lsquo;list&amp;rsquo;) dictionary={&amp;#34;key1&amp;#34;:&amp;#34;value1&amp;#34;,&amp;#34;key2&amp;#34;:&amp;#34;value2&amp;#34;,&amp;#34;key3&amp;#34;:&amp;#34;value3&amp;#34;} how to use indexing like List get() method difference between the indexing and get method If key does not exist, the indexing will return error.</description></item><item><title>what is enum class in Java</title><link>https://eunhanlee.github.io/post/what-is-enum-class-in-java/</link><pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-enum-class-in-java/</guid><description>Definition enum class is for define constant. It will contain the value that will not change during the program is working
Reason for using the enum class Sometimes, the program need constant value that should not changed. We use enum class for define the value. We calls, &amp;ldquo;define Constant&amp;rdquo;
History The notion of constant is came from C language. C used define Preprocessor and const keyward.
C code example #include &amp;lt;stdio.</description></item><item><title>Fibonacci sequence</title><link>https://eunhanlee.github.io/post/fibonacci-sequence/</link><pubDate>Wed, 27 Oct 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/fibonacci-sequence/</guid><description>Definition Certain patterns of numbers.
first and second numbers are always 0,1. next number is addition of previous two numbers
The List of Fibonacci numbers $0,1,1,2,3,5,8,13,21,34,55&amp;hellip;$
Recurrence Relation $F_0=0$
$F_1=1$
$F_n=F_{n-1}+F_{n-2}$
Example index fibonacci numbers calculation 0 0 0 1 1 1 2 1 0+1 3 2 1+1 4 3 1+2 5 5 2+3 6 8 3+5 7 13 5+8 8 21 8+13 9 34 13+21 10 55 21+34 11 89 34+55 12 144 55+89 13 233 89+144 14 377 144+233 15 610 233+377 16 987 377+610 get nth fibonacci number math public static int fib(int num) { double goldenRatio = (1 + Math.</description></item><item><title>[python code]get Coordinate by image</title><link>https://eunhanlee.github.io/post/python-codeget-coordinate-by-image/</link><pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/python-codeget-coordinate-by-image/</guid><description>get Coordinate by image pyautogui started left-top side of monster. If there are multiple images on screen, only return the coordinate of most left-top side image. If there is no same image, return FileNotFoundError
import pyautogui def getCoordinateByImg(imgAddress): imgLocatedCoordinate = pyautogui.locateOnScreen(imgAddress) # get image from the address if (imgLocatedCoordinate): return pyautogui.center(imgLocatedCoordinate) # return the center coordinate. else: print(&amp;#34;image never found&amp;#34;) raise FileNotFoundError 에러 pyscreeze.PyScreezeException: The Pillow package is required to use this function: type &amp;ldquo;pip install Pillow &amp;ndash;upgrade&amp;rdquo; in terminal</description></item><item><title>[python code] keyboard and mouse control</title><link>https://eunhanlee.github.io/post/python-code-keyboard-and-mouse-control/</link><pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/python-code-keyboard-and-mouse-control/</guid><description>how to install pip install pyautogui
Finding Coordinate It will display current mouse coordinate every second.
import pyautogui import time while True: print(&amp;#34;Current Mouse Position : &amp;#34;, pyautogui.position()) time.sleep(1) mouse control import pyautogui pyautogui.moveTo(300, 300) # move (x=300, y=300) pyautogui.moveRel(x, y, t) # move (from current pos, move x and y with time. If t is 2, it will take 2 second to move) pyautogui.click() # click pyautogui.doubleClick() # double click pyautogui.</description></item><item><title>Tuple of Data Structures in Python</title><link>https://eunhanlee.github.io/post/tuple-of-data-structures-in-python/</link><pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/tuple-of-data-structures-in-python/</guid><description>Tuple Definition One of the data structure in python. Almost same as List But Tuple is not editable. Object. Data Structures in Python List Tuple Dictionary set declaration use &amp;ldquo;(&amp;rdquo; and &amp;ldquo;)&amp;rdquo; to declear. But, if there is a element in Tuple, you need to add comma
tuple1=(1,) tuple2=(1,2,3) notTuple=(0) #wrong, this is int type. comma needed index structure same as List
characteristic Tuple is not editable.</description></item><item><title>install [JAVA-AdoptOpenJDK] to [windows 11]</title><link>https://eunhanlee.github.io/post/install-java-adoptopenjdk-to-windows-11/</link><pubDate>Sat, 09 Oct 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/install-java-adoptopenjdk-to-windows-11/</guid><description>purpose install [JAVA-AdoptOpenJDK] to [windows 11]
Java? One of programming language. For using, you need the programm calls Java Development Kit(JDK). The most famous JDK name is Java. It same as programming language name.
Short history The Java JDK was open source. But, the Oracle bought the JDK and make it is not open source. Thus, there are many JDK programs.
AdoptOpenJDK? One of the JDK programs.
environment variable? Some writings may say that you need to set environment variable for window users.</description></item><item><title>Heap Sort</title><link>https://eunhanlee.github.io/post/heap-sort/</link><pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/heap-sort/</guid><description>Definition one of sort array data structure based on binary tree insert data into binary tree and print out from the tree Algorithm steps insert data into binary tree The data sorted as binary tree print Java code public static void heapSort(int arr[]) { int n = arr.length; // Build heap (rearrange array) for (int i = n / 2 - 1; i &amp;gt;= 0; i--) heapTree(arr, n, i); // One by one extract an element from heap for (int i = n - 1; i &amp;gt; 0; i--) { // Move current root to end int temp = arr[0]; arr[0] = arr[i]; arr[i] = temp; // call max heapify on the reduced heap heapTree(arr, i, 0); } } // To heapify a subtree rooted with node i which is // an index in arr[].</description></item><item><title>Merge Sort</title><link>https://eunhanlee.github.io/post/merge-sort/</link><pubDate>Thu, 30 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/merge-sort/</guid><description>Definition one of sort algorithms
Technique Decrease and Conquer
Algorithm steps Recusively loop
Recusively loop left side and right side until the input array cannot separated every separated parts only one element is in there. This is sorted. merge arrays with sort. Java code public static void mergeSort(int[] input) { mergeSortRecurr(input, 0, input.length - 1); } public static void mergeSortRecurr(int[] input, int left, int right) { if (left &amp;lt; right) { int midPos = left + (right - left) / 2; mergeSortRecurr(input, left, midPos); mergeSortRecurr(input, midPos + 1, right); merge(input, left, right, midPos); } } public static void merge(int[] input, int left, int right, int midPos) { //mid pos does not check unlike the left and right int temp1 = midPos - left + 1; int temp2 = right - midPos; //temp array and copy int[] L = new int[temp1]; int[] R = new int[temp2]; for (int i = 0; i &amp;lt; temp1; ++i) L[i] = input[left + i]; for (int j = 0; j &amp;lt; temp2; ++j) R[j] = input[midPos + 1 + j]; int i = 0; int j = 0; int k = left; while (i &amp;lt; temp1 &amp;amp;&amp;amp; j &amp;lt; temp2) { if (L[i] &amp;lt;= R[j]) { input[k] = L[i]; ++i; } else { input[k] = R[j]; ++j; } ++k; } while (i &amp;lt; temp1) { input[k] = L[i]; ++i; ++k; } while (j &amp;lt; temp2) { input[k] = R[j]; ++j; ++k; } } Avg.</description></item><item><title>import [library] to [intellij]</title><link>https://eunhanlee.github.io/post/import-library-to-intellij/</link><pubDate>Tue, 21 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/import-library-to-intellij/</guid><description>purpose import [library] to [intellij]
What is library? pre-made code collection that you can use it right away. It help people to develop program quickly.
Steps download library file (jar file)
File -&amp;gt; Project Structure
Modules -&amp;gt; project -&amp;gt; Dependencies of tabs
click &amp;ldquo;+&amp;rdquo;(=JARs or directories&amp;hellip;) to select the jar file that you want to import.
left side bar underExternal Libraries, you will see imported library.</description></item><item><title>Quick Sort</title><link>https://eunhanlee.github.io/post/quick-sort/</link><pubDate>Tue, 21 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/quick-sort/</guid><description>Definition one of sort algorithms
The most important sort algorithm Use this algorithm anywhere with any languages The best way to avoid worst time complexity is pick pivot randomly. if program most not have $O(n^2)$, need to use other sorting algorithm. Technique Decrease and Conquer
Algorithm steps Recusively loop based on Lomuto.
pick pivot the most right element. left side will be smaller than pivot value and right side will be bigger than pivot.</description></item><item><title>Insertion Sort</title><link>https://eunhanlee.github.io/post/insertion-sort/</link><pubDate>Wed, 15 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/insertion-sort/</guid><description>Definition one of sort algorithms
Technique Brute Force
Algorithm steps first loop first to the end compare looping number and left side. if left side number is bigger than right side, swap them. since number swapped, check left side numbers and make sure the left side is getting smaller step 4 means that if left side is small and does not swap, it does not need to check further. Repeat 1~5 until all of them sorted.</description></item><item><title>List of Data Structures in Python</title><link>https://eunhanlee.github.io/post/list-of-data-structures-in-python/</link><pubDate>Wed, 15 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/list-of-data-structures-in-python/</guid><description>List Definition One of the data structure in python. Almost same as array in other languages. Object. Data Structures in Python List Tuple Dictionary set declaration temp=[] temp=list() temp=[5,9,44] index structure characteristic List in List is possible. This is same as 2D array in other languages String in python is same as List
slicing [starting index : ending index-1 : condition index]
[0:8:3] = select index 0 to 7 by adding 3 [:8:] = select index 0 to 7 by adding 1 [7::] = select index 7 to -1 by adding 1 [::-1] = select index 0 to -1 by adding -1 a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] print(a[0:8:3]) # [0, 3, 6] print(a[:8:]) # [0, 1, 2, 3, 4, 5, 6, 7] print(a[7::]) # [7, 8, 9] print(a[::-1]) # [9, 8, 7, 6, 5, 4, 3, 2, 1, 0] Arithmetic Operation a=[1,2,3] b=[&amp;#34;apple&amp;#34;,&amp;#34;house&amp;#34;,&amp;#34;computer&amp;#34;] print(a+b) # [1, 2, 3, &amp;#39;apple&amp;#39;, &amp;#39;house&amp;#39;, &amp;#39;computer&amp;#39;] # print(a+3) # error # print(a-b) # error # print(a-3) # error # print(a*b) # error print(b*3) # [&amp;#39;apple&amp;#39;, &amp;#39;house&amp;#39;, &amp;#39;computer&amp;#39;, &amp;#39;apple&amp;#39;, &amp;#39;house&amp;#39;, &amp;#39;computer&amp;#39;, &amp;#39;apple&amp;#39;, &amp;#39;house&amp;#39;, &amp;#39;computer&amp;#39;] print(b*0) # [] # print(a/b) # error # print(a/3) # error add element append() = add a new element behind extend() = add new elements behind insert() = add new elements by index [] = add new elements by index condition a=[1,2,3,4,5,6,7,8,9] b=[&amp;#34;apple&amp;#34;,&amp;#34;house&amp;#34;,&amp;#34;computer&amp;#34;] a.</description></item><item><title>personal blog with Hugo-3.create blog</title><link>https://eunhanlee.github.io/post/personal-blog-with-hugo-3.create-blog/</link><pubDate>Tue, 14 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/personal-blog-with-hugo-3.create-blog/</guid><description>Purpose Create personal blog with Hugo and hosting with github at Windows 10. For this purpose, you need knowledge of HTML, Markdown, and Hugo structure. If you knwo golang, css, js, that will be better. But you do not have to.
used tools install date : 03-31-2021 hugo version : hugo v0.82.0 git version : git version 2.31.1.windows.1 windows : 10 windows terminal: v1.7.572.0 Chocolatey : v0.10.15 create blog create static site Go to any fodler that you want to and then run windows terminal.</description></item><item><title>Add Strings</title><link>https://eunhanlee.github.io/post/add-strings/</link><pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/add-strings/</guid><description>Problem Problem_Link
My Answer 1 hour limit no search on internet My code class Solution { public String addStrings(String num1, String num2) { StringBuilder sb = new StringBuilder(); int num1Leng = num1.length() - 1; int num2Leng = num2.length() - 1; int round = 0; for (int i = Math.max(num1.length(), num2.length()) - 1; i &amp;gt; -1; --i) { if (num1Leng &amp;lt; 0) { sb.append(String.valueOf(((num2.charAt(num2Leng) - 48) + round)%10)); if ((((num2.</description></item><item><title>Add Strings2</title><link>https://eunhanlee.github.io/post/add-strings2/</link><pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/add-strings2/</guid><description>Problem Problem_Link
My Answer 1 hour limit no search on internet My code class Solution { public String addStrings(String num1, String num2) { StringBuilder sb = new StringBuilder(); int num1Leng = num1.length() - 1; int num2Leng = num2.length() - 1; int round = 0; for (int i = Math.max(num1.length(), num2.length()) - 1; i &amp;gt; -1; --i) { if (num1Leng &amp;lt; 0) { sb.append(String.valueOf(((num2.charAt(num2Leng) - 48) + round)%10)); if ((((num2.</description></item><item><title>Remove Duplicates from Sorted Array</title><link>https://eunhanlee.github.io/post/remove-duplicates-from-sorted-array/</link><pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/remove-duplicates-from-sorted-array/</guid><description>Problem Problem_Link
My Answer 1 hour limit no search on internet My code class Solution { public int removeDuplicates(int[] nums) { if(nums==null ||nums.length==0) return 0; int temp = -101; int count=0; int pos=0; for(int i=0;i&amp;lt;nums.length;++i){ if(temp!=nums[i]){ temp=nums[i]; nums[pos]=nums[i]; ++count; ++pos; } } return count; } } Time complexity : $O(n)$ Space complexity : $O(1)$ My result Runtime: 2 ms, faster than 22.76% of Java online submissions for Remove Duplicates from Sorted Array.</description></item><item><title>Selection Sort</title><link>https://eunhanlee.github.io/post/selection-sort/</link><pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/selection-sort/</guid><description>Definition one of sort algorithms
Technique Brute Force
Algorithm steps find smallest number in the list swap the smallest number and first place the first element is sorted find smallest number in the list except the sorted element. swap the smallest number and second place Repeat 1~5 until all of them sorted. Example-Java public static int[] selectionSort(int[] input) { for (int i = 0; i &amp;lt; input.length - 1; ++i) { for (int j = input.</description></item><item><title>Bubble Sort</title><link>https://eunhanlee.github.io/post/bubble-sort/</link><pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/bubble-sort/</guid><description>Definition one of sort algorithms
Technique Brute Force
Algorithm steps compare two numbers smaller number will be left and bigger number will be in right side. compare over and over again untill the end of the list Now, biggest number will stay in most right side. This number is sorted Start over from first number except sorted place. Repeat 1~5 until all of them sorted. Example-Java public static int[] bubbleSort(int[] input) { for (int i = 0; i &amp;lt; input.</description></item><item><title>Brute Force Algorithm</title><link>https://eunhanlee.github.io/post/brute-force-algorithm/</link><pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/brute-force-algorithm/</guid><description>Definition check every possible way to find answer.
Points No efficiency most intuitive way to solving problems increase exponential growth one of exhaustive search Example If you find password with brute force algorithm, n=password digits, let&amp;rsquo;s assume 4 k=each digit can contain numbers, let&amp;rsquo;s assume 0~9 Then, all possible ways are $k^n=10^4=10000$ The combination can be in 10000 ways.
When the passwords digits are more than 4, it will be exponential growth.</description></item><item><title>Count Binary Substrings</title><link>https://eunhanlee.github.io/post/count-binary-substrings/</link><pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/count-binary-substrings/</guid><description>Problem Problem_Link
My Answer 1 hour limit no search on internet My result Compile Error Best Answer Search from internet and modify
class Solution { public int countBinarySubstrings(String s) { int curRun = 1; int preRun = 0; int count = 0; for (int i = 1; i &amp;lt; s.length(); i++) { if (s.charAt(i) == s.charAt(i - 1)) ++curRun; else { count += Math.min(curRun, preRun); preRun = curRun; curRun = 1; } } return count + Math.</description></item><item><title>personal blog with Hugo-2.install tools</title><link>https://eunhanlee.github.io/post/personal-blog-with-hugo-2.install-tools/</link><pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/personal-blog-with-hugo-2.install-tools/</guid><description>Purpose Create personal blog with Hugo and hosting with github at Windows 10. For this purpose, you need knowledge of HTML, Markdown, and Hugo structure. If you knwo golang, css, js, that will be better. But you do not have to.
used tools install date : 03-31-2021 hugo version : hugo v0.82.0 git version : git version 2.31.1.windows.1 windows : 10 windows terminal: v1.7.572.0 Chocolatey : v0.10.15 install tools windows terminal Install and set up Windows Terminal</description></item><item><title>Two Sum</title><link>https://eunhanlee.github.io/post/two-sum/</link><pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/two-sum/</guid><description>Problem Problem_Link
My Answer 1 hour limit no search on internet Overview input : int[] nums, int target output : int[] My code class Solution { public int[] twoSum(int[] nums, int target) { int temp[] = new int[nums.length]; int rtn[] = new int[2]; for (int i = 0; i &amp;lt; nums.length; i++) { temp[i] = target - nums[i]; for (int j = 0; j &amp;lt; i; j++) { if (temp[j] == nums[i]) { rtn[0] = j; rtn[1] = i; return rtn; } } } rtn[0] = 0; rtn[1] = 0; return rtn; } } Time complexity : $O(n^2)$ Space complexity : $O(1)$ My result Runtime: 76 ms, faster than 12.</description></item><item><title>Arithmetic Operation in Python</title><link>https://eunhanlee.github.io/post/arithmetic-operation-in-python/</link><pubDate>Fri, 03 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/arithmetic-operation-in-python/</guid><description>kinds of Arithmetic Operation in Python Symbol explaination return + Addition depend on input type - Subtraction depend on input type * Multiplication depend on input type / Division real number // Division Integer % Remaineder real number ** power of depend on input type and and logic gare T or F or or logic gate T or F &amp;lt; less than T or F &amp;gt; greater than T or F &amp;lt;= less than or equal T or F &amp;gt;= greater than or equal T or F == equal T or F Result +, -, *, /, //, %, **, &amp;lt;, &amp;gt;, &amp;lt;=, &amp;gt;= table A B result int int int A+B result int float float A+B result int bool-T int A+1 result int bool-F int A+0 result int none TypeError int String TypeError float bool-T float A+1 result float bool-F float A+0 result float none TypeError float String TypeError bool none TypeError bool String TypeError none String TypeError When computer created and programming language started, 1 was true and 0 was false.</description></item><item><title>Basic Search Algorithms</title><link>https://eunhanlee.github.io/post/basic-search-algorithms/</link><pubDate>Fri, 03 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/basic-search-algorithms/</guid><description>Basic Search Algorithm Linear Search Binary Search Hashing Linear Search Definition check all of the list one by one.
Time complexity O(n)
Points It does not matter about date type need memory space as total list n Binary Search Definition check middle of list first. if the number is smaller than what you are looking for, check right side only and doing this continuously. It will decrease search list in half.</description></item><item><title>Loop vs. Recursion</title><link>https://eunhanlee.github.io/post/loop-vs.-recursion/</link><pubDate>Thu, 02 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/loop-vs.-recursion/</guid><description>Definition Saperate big problem into small repeated parts and solve the problem.
All Recursion can be converted to Loop.
Good and bad points Loop Recursion intuitive complicated Long codes short codes good readability bad readability use less stack memories use much stack memories very low possiblity to get Stack overflow Stack overflow if too mcuh call very low possiblity to get overhead issue overhead issue: call function repeatly will make program slow each level of variable state will not saved each level of variable state will saved because of stack Actual code We should write recursion because it is good for reading and fixing it.</description></item><item><title>personal blog with Hugo-1.Notions</title><link>https://eunhanlee.github.io/post/personal-blog-with-hugo-1.notions/</link><pubDate>Thu, 02 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/personal-blog-with-hugo-1.notions/</guid><description>Purpose Create personal blog with Hugo and hosting with github at Windows 10. For this purpose, you need knowledge of HTML, Markdown, and Hugo structure. If you knwo golang, css, js, that will be better. But you do not have to.
used tools install date : 03-31-2021 hugo version : hugo v0.82.0 git version : git version 2.31.1.windows.1 windows : 10 windows terminal: v1.7.572.0 Chocolatey : v0.10.15 Notions hugo?</description></item><item><title>Tail Recursion</title><link>https://eunhanlee.github.io/post/tail-recursion/</link><pubDate>Thu, 02 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/tail-recursion/</guid><description>Definition A method of recursion optimization
Principle When there is recursion, the recursive class remain in stack memory and it will cause overflow. The tail call elimination is created for fixing the overflow issue. If the reucursive class return everything at last, the class does need to remain in stack memory.
Other Names tail call elimination tail call optimization How to Change return part of recursion to call function only.</description></item><item><title>Variables of Python</title><link>https://eunhanlee.github.io/post/variables-of-python/</link><pubDate>Thu, 02 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/variables-of-python/</guid><description>Kinds of Variables scalar and non-scalar both object
scalar int : integer float : real number bool : True or False none : Null non-scalar String : data values that are made up of ordered sequences of characters, such as &amp;ldquo;hello world&amp;rdquo; checking data type print(type(Variable)) Case-Sensitive a and A are different variable
Casting x = str(3) # &amp;#34;4&amp;#34; y = int(3) # 4 z = float(3) # 4.</description></item><item><title>How to write Good Code</title><link>https://eunhanlee.github.io/post/how-to-write-good-code/</link><pubDate>Mon, 30 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/how-to-write-good-code/</guid><description>Clarity Input and Output Most mistakes are coming from misunderstanding of range for the input and output. We need to find the range of input and output specifically.
Each Steps of Algorithm must be Clear The steps of algorithm separated clearly. Thus, you or co-workers may not misunderstand the code.
Need to Study computer structure Some codes got issue because of computer structure. If you calculate int type addition, the result is wrong because integer overflow.</description></item><item><title>uplaod [Android Studio Source code] to [Github]</title><link>https://eunhanlee.github.io/post/uplaod-android-studio-source-code-to-github/</link><pubDate>Mon, 30 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/uplaod-android-studio-source-code-to-github/</guid><description>1. create repository in github: Repository is kind of folders on your github. Set name and create. Other settings are not needed.
2. taps on top of the Android Studio, click VCS -&amp;gt; Enable Version Control Integration. 3. It will ask something, choose git and push ok button. : There are many other websites that similar to github. Check buttom tab that has Git:master
4. click VCS -&amp;gt; Commit 5. Choose files that you want to upload.</description></item><item><title>What is Algorithm</title><link>https://eunhanlee.github.io/post/what-is-algorithm/</link><pubDate>Fri, 27 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-algorithm/</guid><description>Definition specific method of solving the problem
the problem: It need to be clear. input and output is stated in exact range. specific method: If you do not know how to solve that problem, you can solve it with specific steps.
Example If you get drink from a vending machine,
put cash select drink get drink This is kind of algorithm. However, it specfic enough for computers.
get $3 cash from wallet find input location insert cash into the cending machine check how many kinds of drink choose drink what you want push button for the drink pick up the drink.</description></item><item><title>[Android_Kotlin code]Creade Button</title><link>https://eunhanlee.github.io/post/android_kotlin-codecreade-button/</link><pubDate>Thu, 26 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/android_kotlin-codecreade-button/</guid><description>Steps create button in layout/activity_main.xml create strings on button in values/strings.xml connect button and set event in MainActivity.kt padding and margin 1. create button in layout/activity_main.xml &amp;lt;Button android:id=&amp;#34;@+id/button&amp;#34; android:layout_width=&amp;#34;wrap_content&amp;#34; android:layout_height=&amp;#34;wrap_content&amp;#34; android:layout_margin=&amp;#34;10dp&amp;#34; android:padding=&amp;#34;10dp&amp;#34; android:text=&amp;#34;@string/btn&amp;#34; android:textColor=&amp;#34;@color/black&amp;#34; app:backgroundTint=&amp;#34;@color/white&amp;#34; /&amp;gt; 2. create strings on button in values/strings.xml &amp;lt;string name=&amp;#34;btn&amp;#34;&amp;gt;Button&amp;lt;/string&amp;gt; 3. connect button and set event in MainActivity.kt import android.widget.Button class MainActivity : AppCompatActivity() { override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) setContentView(R.layout.activity_main) // set id from activity_main.</description></item><item><title>install [git] to [windows 10]</title><link>https://eunhanlee.github.io/post/install-git-to-windows-10/</link><pubDate>Wed, 25 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/install-git-to-windows-10/</guid><description>purpose install [git] to [windows 10]
What is git? commend based program that is for tracking file changes. Origianlly, it invented for programming, thus, git file contains information of when did the file created, changed and moved.
steps 1. downlad git official link
2. install the program 3. installation settings Additional icons &amp;gt; On the Desktop : create shortcut
Windows Exporer integration
Git Bash Here : Git Bash connection, any folder can connect with git right away Git GUI Here : Git GUI connection, create some GUI on right click menu Git LFS (Large File Support) - origianlly git was for coding.</description></item><item><title>what is diffence between comparator and compatable in JAVA</title><link>https://eunhanlee.github.io/post/what-is-diffence-between-comparator-and-compatable-in-java/</link><pubDate>Wed, 25 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-diffence-between-comparator-and-compatable-in-java/</guid><description>Definition Both interfaces are very similer because they are for sorting lists and arrays. However, one is for one condition and other one is for mutiple conditions.
Difference Comparable Comparator java.lang package. java.util package. Comparable affects the original class Comparator doesn&amp;rsquo;t affect the original class compareTo() method with 1 parameter compare() method with 2 parameters Collections.sort(List) Collections.sort(List, Comparator) Arrays.</description></item><item><title>i++ vs. ++i prefix operator and postfix operator</title><link>https://eunhanlee.github.io/post/i++-vs.-++i-prefix-operator-and-postfix-operator/</link><pubDate>Tue, 24 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/i++-vs.-++i-prefix-operator-and-postfix-operator/</guid><description>code name How ++i prefix increment operator i = i+1;return i; i++ postfix increment operator final int t = i; i = i+1; return t; &amp;ndash;i prefix decrement operator i = i-1;return i; i&amp;ndash; postfix decrement operator final int t = i; i = i-1; return t; int x = 2; int y = 2; System.</description></item><item><title>stable vs. unstable sorts</title><link>https://eunhanlee.github.io/post/stable-vs.-unstable-sorts/</link><pubDate>Tue, 24 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/stable-vs.-unstable-sorts/</guid><description>Definition Stable and unstable is depend on how sort any duplicated list.
If the algorithm keeps original position of duplicated values, it is stable sort algorithm
If the algorithm positioned duplicated values randomly, it is unstable sort algorithm
Example raw list=[3(1), 7(1), 3(2), 4, 7(2), 9]
stable sorted list=[3(1), 3(2), 4, 7(1), 7(2), 9]
unstable sorted list=[3(2), 3(1), 4, 7(2), 7(1), 9]
Stable Sorting Bubble Sort
Insertion Sort
Merge Sort</description></item><item><title>[JavaException]IllegalArgumentException</title><link>https://eunhanlee.github.io/post/javaexceptionillegalargumentexception/</link><pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/javaexceptionillegalargumentexception/</guid><description>Reason Thrown to indicate that a method has been passed an illegal or inappropriate argument.
argument is actual values that are passed to variables If you put any actual values that is not correct for the variable, it will cause IllegalArgumentException
Example int a = 2147483649; // value is too big int a = -2147483649; // value is too small String date=&amp;#34;08-07-1990&amp;#34;; // format is dd-MM-yyyy Date format=new SimpleDateFormat(&amp;#34;dd/MM/yyyy&amp;#34;).parse(date);// format is different Solution check input value range check calculation that can be over the variable limitation use try-catch block</description></item><item><title>Primitive type and Reference type in Java</title><link>https://eunhanlee.github.io/post/primitive-type-and-reference-type-in-java/</link><pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/primitive-type-and-reference-type-in-java/</guid><description>Kinds of Data Type in Java Primitive type Java provides 8 kinds of Primitive type. Primitive data types cannot contain null actual value will saved in Stack memory. data type base memory defult value range of data range of data in number boolean 1 byte false true, false true, false byte 1 byte 0 -127 ~ 128 $-2^{7}$~ $(2^{7}-1)$ short 2 byte 0 -32,768 ~ 32,767 $-2^{15}$~ $(2^{15}-1)$ int 4 byte 0 -2,147,483,648 ~ 2,147,483,647 $-2^{31}$~ $(2^{31}-1)$ long 8 byte 0L -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807 $-2^{63}$~ $(2^{63}-1)$ float 4 byte 0.</description></item><item><title>what happen if + or - with Char in JAVA</title><link>https://eunhanlee.github.io/post/what-happen-if-+-or-with-char-in-java/</link><pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-happen-if-+-or-with-char-in-java/</guid><description>Result code result char type + int type return unicode char type - int type error int type + char type return unicode int type - char type error char type + char type return unicode char type - char type return unicode String is not Primitive Data Type. This is object example of use For lexicographical order for (int i = 0; i &amp;lt; order.</description></item><item><title>what is difference between Error and Exception in Java</title><link>https://eunhanlee.github.io/post/what-is-difference-between-error-and-exception-in-java/</link><pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-difference-between-error-and-exception-in-java/</guid><description>What is Error Programs run something that is not what programmers wanted or shutdown unexpectedly. Any causes of that action are Error.
Kinds of Errors compile-time error compile failed. usually, wrong lanuage keyword used. python does not understand &amp;ldquo;System.out.println&amp;rdquo; This code is for JAVA.
runtime error crash during the programs run. put values in int arr[5] that array size is 3
logical error programmer created wrong process. you wanted to put blue in variable x.</description></item><item><title>[JAVA code]reverse node</title><link>https://eunhanlee.github.io/post/java-codereverse-node/</link><pubDate>Thu, 19 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codereverse-node/</guid><description> public static ListNode reverse(ListNode head) { ListNode prev = null; while (head != null) { ListNode next = head.next; head.next = prev; prev = head; head = next; } return prev; } Time complexity : $O(n)$ Space complexity : $O(1)$ input : head node of LinkedList output : head node of LinkedList</description></item><item><title>inclusive and exclusive</title><link>https://eunhanlee.github.io/post/inclusive-and-exclusive/</link><pubDate>Wed, 18 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/inclusive-and-exclusive/</guid><description>Inclusive - Including the last number
Exclusive - Excluding the last number
In Computer Science, inclusive/exclusive apply to a number range
Example inclusive If a function will compute $2^i$ where $i = 1, 2, &amp;hellip;, n$.
$i$ can have values from 1 up to and including the value n.
We says, n is Included in Inclusive
1 through 10 (inclusive) = [1, 10] 1 2 3 4 5 6 7 8 9 10 exclusive If a function will compute $2^i$ where i = 1, 2, .</description></item><item><title>[JAVA code]Alphabetical Order</title><link>https://eunhanlee.github.io/post/java-codealphabetical-order/</link><pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codealphabetical-order/</guid><description>Alphabetical Order According to ASCII rules [numbers][capital letters][lowercase letters] 0 ~ 9, A ~ Z, a ~ z
Time complexity : $O(n\ log\ n)$ Space complexity : $O(1)$ For List Collections.sort(List&amp;lt;String&amp;gt;_values); For Array Arrays.sort(String[]array); Time complexity : $O(n^2)$ Space complexity : $O(1)$ public static String[] LexicalOrder(String[] words) { int n = words.length; for (int i = 0; i &amp;lt; n - 1; ++i) { for (int j = i + 1; j &amp;lt; n; ++j) { if (words[i].</description></item><item><title>Dynamic Programming</title><link>https://eunhanlee.github.io/post/dynamic-programming/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/dynamic-programming/</guid><description>Definition algorithmic problem solving technique that split into many simple subproblems and reduce steps of subproblems. In other wards, separates into subproblems and get solution by addition of all subproblems.
Example if you calculate $2^1+2^2+2^3+2^4+2^5$ and display each numbers,
$2^1=2=2$
$2^2=22=2^12$
$2^3=222=2^2*2$
$2^4=2222=2^32$
$2^5=22222=2^4*2$
since you need to calculate each of numbers ($2^1,2^2,2^3,2^4,2^5$), you can skip some of parts that you already calculated. When you calculate the $2^5$, you done have to calculate $2^4$ if that number $2^4$ is already calculated.</description></item></channel></rss>