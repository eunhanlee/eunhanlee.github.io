<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Eunhan's library</title><link>https://eunhanlee.github.io/post/</link><description>Recent content in Posts on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Wed, 21 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Divide and conquer strategy</title><link>https://eunhanlee.github.io/post/divide-and-conquer-strategy/</link><pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/divide-and-conquer-strategy/</guid><description>Purpose split problem into sub problems as much as possible and merge all of them to answer
Divide and conquer algorithms vs. Dynamic programming? Divide and conquer algorithms does not use subproblems&amp;rsquo; results for other sub problems.
But, dynamic programming uses other resoults of subproblem.
Usually use in.. quick sort merge sort binary sort Fast Fourier Transform (FFT) big data analysis Explanation divide: separate problems that are smaller instances of the same problem conquer: solve the subprolems recursively merge: add all of subanswers to find answer Example merge sort step 1.</description></item><item><title>Reverse Integer</title><link>https://eunhanlee.github.io/post/reverse-integer/</link><pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/reverse-integer/</guid><description>Problem Problem_Link{: .btn .btn-green}
1 hour limit no search on internet Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.
Assume the environment does not allow you to store 64-bit integers (signed or unsigned).
Example 1:
Input: x = 123 Output: 321 Example 2:</description></item><item><title>Kadane's Algorithm</title><link>https://eunhanlee.github.io/post/kadanes-algorithm/</link><pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/kadanes-algorithm/</guid><description>Purpose Find maximum sum of contiguous values in an array. The array order must not change.
Example If there is $[-2, 1, -3, 4, -1, 2, 1, -5, 4] $
$[4, -1, 2, 1]$ is the answer
4+(-1)+2+1=6, this is bigger than any other contiguous values.
Complexity Analysis Time complexity : $O(N)$ since it&amp;rsquo;s one pass along the array. Space complexity : $O(1)$, since it&amp;rsquo;s a constant space solution. Explanation For finding maxium number, we need to calculate all of possible numbers and compare.</description></item><item><title>Reorder Data in Log Files</title><link>https://eunhanlee.github.io/post/reorder-data-in-log-files/</link><pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/reorder-data-in-log-files/</guid><description>Problem Problem_Link
1 hour limit no search on internet You have an array of logs. Each log is a space delimited string of words.
For each log, the first word in each log is an alphanumeric identifier. Then, either:
Each word after the identifier will consist only of lowercase letters, or; Each word after the identifier will consist only of digits. We will call these two varieties of logs letter-logs and digit-logs.</description></item><item><title>what is hashmap in Java</title><link>https://eunhanlee.github.io/post/hashmap/</link><pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/hashmap/</guid><description>Definition Hashmap basically solves the problem of searching objects from large set.
When should we use it large set of objects frequent access to objects required. methods method result time complexity HashMap&amp;lt;String,String&amp;gt; map = new HashMap&amp;lt;&amp;gt;(); create hashmap constructor put( key, value ) add key and value usually O(1) remove( key ) remove the key usually O(1) get( key ) get value from the key usually O(1) isEmpty() T or F for all data O(n) size() return how may keys O(n) containsKey( key ) check key is there usually O(1) containsValue( value ) check value is there usually O(1) getOrDefault( key, value) get value from the key.</description></item><item><title>Merge Two Sorted Lists</title><link>https://eunhanlee.github.io/post/merge-two-sorted-lists/</link><pubDate>Fri, 16 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/merge-two-sorted-lists/</guid><description>Problem Problem_Link
1 hour limit no search on internet Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists.
Example 1:
Input: l1 = [1,2,4], l2 = [1,3,4] Output: [1,1,2,3,4,4] Example 2:
Input: l1 = [], l2 = [] Output: [] Example 3:
Input: l1 = [], l2 = [0] Output: [0] Constraints:</description></item><item><title>Reverse Linked List</title><link>https://eunhanlee.github.io/post/reverse-linked-list/</link><pubDate>Fri, 16 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/reverse-linked-list/</guid><description>Problem Problem_Link
1 hour limit no search on internet Reverse a singly linked list.
Example:
Input: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL Output: 5-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;1-&amp;gt;NULL Follow up:
A linked list can be reversed either iteratively or recursively. Could you implement both?
My Answer My code class Solution { public ListNode reverseList(ListNode head) { Stack&amp;lt;ListNode&amp;gt; stack = new Stack&amp;lt;&amp;gt;(); while (head != null) { stack.push(head); head = head.next; } ListNode rtnHead = new ListNode(); ListNode temp = rtnHead; while (!</description></item><item><title>Valid Parentheses</title><link>https://eunhanlee.github.io/post/valid-parentheses/</link><pubDate>Fri, 16 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/valid-parentheses/</guid><description>Problem 1 hour limit no search on internet Problem_Link
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
An input string is valid if:
Open brackets must be closed by the same type of brackets. Open brackets must be closed in the correct order. Example 1:
Input: s = &amp;quot;()&amp;quot; Output: true Example 2:</description></item><item><title>what is diffence between comparator and compatable in JAVA</title><link>https://eunhanlee.github.io/post/what-is-diffence-between-comparator-and-compatable-in-java/</link><pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-diffence-between-comparator-and-compatable-in-java/</guid><description>Comparable Comparator java.lang package. java.util package. Sorting interface that designed for a condition interface that designed for mutiple conditions Comparable affects the original class Comparator doesn&amp;rsquo;t affect the original class compareTo() method with 1 parameter compare() method with 2 parameters Collections.sort(List) Collections.sort(List, Comparator) Arrays.sort(array) Arrays.sort(array, myComparator); Definition Both interfaces are very similer because they are for sorting lists and arrays.</description></item><item><title>what is comparable in Java</title><link>https://eunhanlee.github.io/post/javacomparable/</link><pubDate>Wed, 14 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/javacomparable/</guid><description>Hierarchy package: java.lang.Comparable
Definition Sorting interface that designed for a condition by overriding compareTo method. For example, you can sort list in ascending order of size.
about the compareTo() method if compareTo() method return positive number, swap the input parameters
else will be remain same
condition return First parameter &amp;lt; second parameter negative First parameter == second parameter 0 First parameter &amp;gt; second parameter positive How to use customObject implements Comparable&amp;lt;&amp;gt;</description></item><item><title>what is comparator in Java</title><link>https://eunhanlee.github.io/post/javacomparator/</link><pubDate>Wed, 14 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/javacomparator/</guid><description>Hierarchy package: java.util.Comparator
Definition Sorting interface that designed for mutiple conditions by creating compare method. For example, you can sort list in ascending order of size and descending order of letters.
about the compare() method if compare() method return positive number, swap the input parameters
else will be remain same
condition return First parameter &amp;lt; second parameter negative First parameter == second parameter 0 First parameter &amp;gt; second parameter positive How to use MyComparator implements Comparator&amp;lt;&amp;gt;</description></item><item><title>Verifying an Alien Dictionary</title><link>https://eunhanlee.github.io/post/verifying-an-alien-dictionary/</link><pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/verifying-an-alien-dictionary/</guid><description>Problem Problem_Link
1 hour limit no search on internet In an alien language, surprisingly they also use english lowercase letters, but possibly in a different order. The order of the alphabet is some permutation of lowercase letters.
Given a sequence of words written in the alien language, and the order of the alphabet, return true if and only if the given words are sorted lexicographicaly in this alien language.</description></item><item><title>what is iterator in Java</title><link>https://eunhanlee.github.io/post/javaiterator/</link><pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/javaiterator/</guid><description>Definition Interface that can read any class in the collection framework.
Thus, we can read arraylist or linkedlist or hashmap with iterator.
why we use iterator? Since we can read any list or set with iterator, we do not have to fix or change code when you work with big projects.
Hierarchy method hasNext() next() remove()
Example List list = new ArrayList();// arrayList list.add(&amp;#34;1&amp;#34;); list.add(&amp;#34;2&amp;#34;); list.add(&amp;#34;3&amp;#34;); Iterator &amp;lt;string&amp;gt; itr = list.</description></item><item><title>[JAVA code]for loop</title><link>https://eunhanlee.github.io/post/java-codefor-loop/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codefor-loop/</guid><description> variables in for statement will not keep memory after loop is finished
break : finish the whole loop
continue : skip last and move to next loop
0~9 loop
for (int i = 0; i &amp;lt; 10; i++) { } 10~0 loop for (int i = 10; i &amp;gt; -1; i--) { } only read the arr, cannot modify for (String str : arr) { }</description></item><item><title>[JAVA code]get Fibonacci nth number</title><link>https://eunhanlee.github.io/post/java-codeget-fibonacci-nth-number/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codeget-fibonacci-nth-number/</guid><description>math public static int fib(int num) { double goldenRatio = (1 + Math.sqrt(5)) / 2; return (int) Math.round(Math.pow(goldenRatio, num) / Math.sqrt(5)); } recuresive public static int fibRecursive(int num) { if (num &amp;lt;= 1) return num; return fibRecursive(num - 2) + fibRecursive(num - 1); } Repeat public static int fib(int num) { if (num == 0) return 0; else if (num == 1) return 1; else { int result = 0; int iterA = 0; int iterB = 1; for (int i = 2; i &amp;lt;= num; i++) { result = iterA + iterB; iterA = iterB; iterB = result; } return result; } }</description></item><item><title>[JAVA code]hashmap</title><link>https://eunhanlee.github.io/post/java-codehashmap/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codehashmap/</guid><description>private HashMap&amp;lt;Character, Character&amp;gt; map; this.map = new HashMap&amp;lt;&amp;gt;(); HashMap&amp;lt;String,String&amp;gt; map = new HashMap&amp;lt;&amp;gt;(map1);// HashMap that has same key and values as map1 HashMap&amp;lt;String,String&amp;gt; map2 = new HashMap&amp;lt;&amp;gt;(10);// set capacity defult is 16 map.put(&amp;#34;a&amp;#34;,&amp;#34;b&amp;#34;); //add map.get(&amp;#34;a&amp;#34;);//if not there, return null map.getOrDefault(&amp;#34;a&amp;#34;,&amp;#34;no value&amp;#34;);//if not there, return 2nd parameter &amp;#34;no value&amp;#34; map.isEmpty()//T or F for all data map.size() //return how may keys map.containsKey( key )//check key is there map.containsValue( value )//check value is there map.</description></item><item><title>[JAVA code]int reverse</title><link>https://eunhanlee.github.io/post/java-codeint-reverse/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codeint-reverse/</guid><description>int reverse without using string Time complexity : $O(n)$ Space complexity : $O(1)$ public static int reverseInt(int input) { int output = 0; int length = ((int) (Math.log10(input)) + 1); for (int i = 0; i &amp;lt; length; ++i) { output = output * 10 + input % 10; input = input / 10; } return output; }</description></item><item><title>[JAVA code]switch</title><link>https://eunhanlee.github.io/post/java-codeswitch/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codeswitch/</guid><description>lambda Example (after java 8) public static double calculate(String operator, double x, double y) { return switch (operator) { case &amp;#34;+&amp;#34;,&amp;#34;add&amp;#34; -&amp;gt; x + y; case &amp;#34;-&amp;#34;,&amp;#34;sub&amp;#34; -&amp;gt; x - y; case &amp;#34;*&amp;#34;,&amp;#34;multiply&amp;#34; -&amp;gt; x * y; case &amp;#34;/&amp;#34;,&amp;#34;divide&amp;#34; -&amp;gt; { if (y == 0) { throw new IllegalArgumentException(&amp;#34;Can&amp;#39;t divide by 0&amp;#34;); } yield x / y; } default -&amp;gt; throw new IllegalArgumentException(&amp;#34;Unknown operator &amp;#34;+operator); }; } Example public static double calculate(String operator, double x, double y) { switch (operator) { case &amp;#34;+&amp;#34;: case &amp;#34;add&amp;#34;: return x + y; case &amp;#34;-&amp;#34;: case &amp;#34;sub&amp;#34;: return x - y; case &amp;#34;*&amp;#34;: case &amp;#34;multiply&amp;#34;: return x * y; case &amp;#34;/&amp;#34;: case &amp;#34;divide&amp;#34;: if (y == 0) { throw new IllegalArgumentException(&amp;#34;Can&amp;#39;t divide by 0&amp;#34;); } return x / y; default: throw new IllegalArgumentException(&amp;#34;Unknown operator &amp;#34; + operator); } }</description></item><item><title>[Java]Primitive type and Reference type</title><link>https://eunhanlee.github.io/post/javaprimitive-type-and-reference-type/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/javaprimitive-type-and-reference-type/</guid><description>Primitive type JAVA provides 8 kinds of Primitive type There is no null value. Defult value is already inserted. actual value will saved in Stack memory. String is object. Not primitive type. Data Type Allocated Memory Defult Value Range of Data Range of Data in Number boolean 1 byte false true, false byte 1 byte 0 -127 ~ 128 $-2^{7}$~ $(2^{7}-1)$ short 2 byte 0 -32,768 ~ 32,767 $-2^{15}$~ $(2^{15}-1)$ int 4 byte 0 -2,147,483,648 ~ 2,147,483,647 $-2^{31}$~ $(2^{31}-1)$ long 8 byte 0L -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807 $-2^{63}$~ $(2^{63}-1)$ float 4 byte 0.</description></item><item><title>Best Time to Buy and Sell Stock</title><link>https://eunhanlee.github.io/post/best-time-to-buy-and-sell-stock/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/best-time-to-buy-and-sell-stock/</guid><description>Problem Problem_Link
1 hour limit no search on internet Say you have an array for which the ith element is the price of a given stock on day i.
If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.
Note that you cannot sell a stock before you buy one.</description></item><item><title>Fibonacci sequence</title><link>https://eunhanlee.github.io/post/fibonacci-sequence/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/fibonacci-sequence/</guid><description>Definition Certain patterns of numbers.
first and second numbers are always 0,1. next number is addition of previous two numbers
Recurrence Relation $F_0=0$
$F_1=1$
$F_n=F_{n-1}+F_{n-2}$
Example index fibonacci numbers calculation 0 0 0 1 1 1 2 1 0+1 3 2 1+1 4 3 1+2 5 5 2+3 6 8 3+5 7 13 5+8 8 21 8+13 9 34 13+21 10 55 21+34 11 89 34+55 12 144 55+89 13 233 89+144 14 377 144+233 15 610 233+377 16 987 377+610 get nth fibonacci number math public static int fib(int num) { double goldenRatio = (1 + Math.</description></item><item><title>i++ vs. ++i prefix operator and postfix operator</title><link>https://eunhanlee.github.io/post/i++-vs.-++i-prefix-operator-and-postfix-operator/</link><pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/i++-vs.-++i-prefix-operator-and-postfix-operator/</guid><description>code name How ++i prefix increment operator i = i+1;return i; i++ postfix increment operator final int t = i; i = i+1; return t; &amp;ndash;i prefix decrement operator i = i-1;return i; i&amp;ndash; postfix decrement operator final int t = i; i = i-1; return t; int x = 2; int y = 2; System.</description></item><item><title>stable vs. unstable sorts</title><link>https://eunhanlee.github.io/post/stable-vs.-unstable-sorts/</link><pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/stable-vs.-unstable-sorts/</guid><description>Definition Stable and unstable is depend on how sort any duplicated list.
If the algorithm keeps original position of duplicated values, it is stable sort algorithm
If the algorithm positioned duplicated values randomly, it is unstable sort algorithm
Example raw list=[3(1), 7(1), 3(2), 4, 7(2), 9]
table sorted list=[3(1), 3(2), 4, 7(1), 7(2), 9]
unstable sorted list=[3(2), 3(1), 4, 7(2), 7(1), 9]
Stable Sorting Bubble Sort
Insertion Sort
Merge Sort</description></item><item><title>[JAVA code]Lexicographical order</title><link>https://eunhanlee.github.io/post/java-codelexicographical-order/</link><pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codelexicographical-order/</guid><description> Time complexity : $O(n\ log\ n)$ Space complexity : $O(1)$ Collections.sort(List&amp;lt;String&amp;gt;_values); Arrays.sort(String[]array); Time complexity : $O(n^2)$ Space complexity : $O(1)$ public static String[] LexicalOrder(String[] words) { int n = words.length; for (int i = 0; i &amp;lt; n - 1; ++i) { for (int j = i + 1; j &amp;lt; n; ++j) { if (words[i].compareTo(words[j]) &amp;gt; 0) { String temp = words[i]; words[i] = words[j]; words[j] = temp; } } } return words; }</description></item><item><title>what happen if + or - with Char in JAVA</title><link>https://eunhanlee.github.io/post/what-happen-if-+-or-with-char-in-java/</link><pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-happen-if-+-or-with-char-in-java/</guid><description>Result code result char type + int type return unicode char type - int type error int type + char type return unicode int type - char type error char type + char type return unicode char type - char type return unicode String is not Primitive Data Type. This is object example of use For lexicographical order for (int i = 0; i &amp;lt; order.</description></item><item><title>[JAVA code]reverse node</title><link>https://eunhanlee.github.io/post/java-codereverse-linkedlist/</link><pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codereverse-linkedlist/</guid><description> Time complexity : $O(n)$ Space complexity : $O(1)$ public static ListNode reverse(ListNode head) { ListNode prev = null; while (head != null) { ListNode next = head.next; head.next = prev; prev = head; head = next; } return prev; }</description></item><item><title>[Java] what is difference between Error and Exception in JAVA</title><link>https://eunhanlee.github.io/post/what-is-difference-between-error-and-exception-in-java/</link><pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-difference-between-error-and-exception-in-java/</guid><description>What is Error Programs run something that is not what programmers wanted or shutdown unexpectedly.
Any causes of that action are Error.
Kinds of Errors compile-time error compile failed. usually, wrong lanuage keyword used. python does not understand &amp;quot;System.out.println&amp;quot; This code is for JAVA.
runtime error crash during the programs run. put values in int arr[5] that array size is 3
logical error programmer created wrong process. you wanted to put blue in variable x.</description></item><item><title>Dynamic Programming</title><link>https://eunhanlee.github.io/post/dynamic-programming/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/dynamic-programming/</guid><description>Definition algorithmic problem solving technique that split into many simple subproblems and reduce steps of subproblems. In other wards, separates into subproblems and get solution by addition of all subproblems.
Example if you calculate $2^1+2^2+2^3+2^4+2^5$ and display each numbers,
$2^1=2=2$
$2^2=2+2=2^1+2$
$2^3=2+2+2=2^2+2$
$2^4=2+2+2+2=2^3+2$
$2^5=2+2+2+2+2=2^4+2$
since you need to calculate each of numbers ($2^1,2^2,2^3,2^4,2^5$), you can skip some of parts that you already calculated. When you calculate the $2^5$, you done have to calculate $2^4$ if that number $2^4$ is already calculated.</description></item><item><title>inclusive and exclusive</title><link>https://eunhanlee.github.io/post/inclusive-and-exclusive/</link><pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/inclusive-and-exclusive/</guid><description>Inclusive - Including the last number
Exclusive - Excluding the last number
In Computer Science, inclusive/exclusive apply to a number range
Example inclusive If a function will compute \(2^i\) where \(i = 1, 2, ..., n\).
\(i\) can have values from 1 up to and including the value n.
We says, n is Included in Inclusive
1 through 10 (inclusive) = [1, 10] 1 2 3 4 5 6 7 8 9 10 exclusive If a function will compute $2^i$ where i = 1, 2, .</description></item><item><title>Two Sum</title><link>https://eunhanlee.github.io/post/two-sum/</link><pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/two-sum/</guid><description>Problem [Problem_Link]
Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order.
Example 1:
Input: nums = [2,7,11,15], target = 9 Output: [0,1] Output: Because nums[0] + nums[1] == 9, we return [0, 1].</description></item></channel></rss>