<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ProblemSolving on Eunhan's library</title><link>https://eunhanlee.github.io/topics/problemsolving/</link><description>Recent content in ProblemSolving on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Fri, 16 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/topics/problemsolving/index.xml" rel="self" type="application/rss+xml"/><item><title>Merge Two Sorted Lists</title><link>https://eunhanlee.github.io/post/merge-two-sorted-lists/</link><pubDate>Fri, 16 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/merge-two-sorted-lists/</guid><description>Problem Problem_Link
1 hour limit no search on internet Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists.
Example 1:
Input: l1 = [1,2,4], l2 = [1,3,4] Output: [1,1,2,3,4,4] Example 2:
Input: l1 = [], l2 = [] Output: [] Example 3:
Input: l1 = [], l2 = [0] Output: [0] Constraints:</description></item><item><title>Reverse Linked List</title><link>https://eunhanlee.github.io/post/reverse-linked-list/</link><pubDate>Fri, 16 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/reverse-linked-list/</guid><description>Problem Problem_Link
1 hour limit no search on internet Reverse a singly linked list.
Example:
Input: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL Output: 5-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;1-&amp;gt;NULL Follow up:
A linked list can be reversed either iteratively or recursively. Could you implement both?
My Answer My code class Solution { public ListNode reverseList(ListNode head) { Stack&amp;lt;ListNode&amp;gt; stack = new Stack&amp;lt;&amp;gt;(); while (head != null) { stack.push(head); head = head.next; } ListNode rtnHead = new ListNode(); ListNode temp = rtnHead; while (!</description></item><item><title>Valid Parentheses</title><link>https://eunhanlee.github.io/post/valid-parentheses/</link><pubDate>Fri, 16 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/valid-parentheses/</guid><description>Problem 1 hour limit no search on internet Problem_Link
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
An input string is valid if:
Open brackets must be closed by the same type of brackets. Open brackets must be closed in the correct order. Example 1:
Input: s = &amp;quot;()&amp;quot; Output: true Example 2:</description></item><item><title>Verifying an Alien Dictionary</title><link>https://eunhanlee.github.io/post/verifying-an-alien-dictionary/</link><pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/verifying-an-alien-dictionary/</guid><description>Problem Problem_Link
1 hour limit no search on internet In an alien language, surprisingly they also use english lowercase letters, but possibly in a different order. The order of the alphabet is some permutation of lowercase letters.
Given a sequence of words written in the alien language, and the order of the alphabet, return true if and only if the given words are sorted lexicographicaly in this alien language.</description></item><item><title>Best Time to Buy and Sell Stock</title><link>https://eunhanlee.github.io/post/best-time-to-buy-and-sell-stock/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/best-time-to-buy-and-sell-stock/</guid><description>Problem Problem_Link
1 hour limit no search on internet Say you have an array for which the ith element is the price of a given stock on day i.
If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.
Note that you cannot sell a stock before you buy one.</description></item><item><title>Two Sum</title><link>https://eunhanlee.github.io/post/two-sum/</link><pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/two-sum/</guid><description>Problem [Problem_Link]
Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order.
Example 1:
Input: nums = [2,7,11,15], target = 9 Output: [0,1] Output: Because nums[0] + nums[1] == 9, we return [0, 1].</description></item></channel></rss>