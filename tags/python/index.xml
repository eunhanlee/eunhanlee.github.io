<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Eunhan's library</title><link>https://eunhanlee.github.io/tags/python/</link><description>Recent content in Python on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Tue, 26 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>[python code]get Coordinate by image</title><link>https://eunhanlee.github.io/post/python-codeget-coordinate-by-image/</link><pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/python-codeget-coordinate-by-image/</guid><description>get Coordinate by image pyautogui started left-top side of monster. If there are multiple images on screen, only return the coordinate of most left-top side image. If there is no same image, return FileNotFoundError
import pyautogui def getCoordinateByImg(imgAddress): imgLocatedCoordinate = pyautogui.locateOnScreen(imgAddress) # get image from the address if (imgLocatedCoordinate): return pyautogui.center(imgLocatedCoordinate) # return the center coordinate. else: print(&amp;#34;image never found&amp;#34;) raise FileNotFoundError 에러 pyscreeze.PyScreezeException: The Pillow package is required to use this function: type &amp;ldquo;pip install Pillow &amp;ndash;upgrade&amp;rdquo; in terminal</description></item><item><title>[python code] keyboard and mouse control</title><link>https://eunhanlee.github.io/post/python-code-keyboard-and-mouse-control/</link><pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/python-code-keyboard-and-mouse-control/</guid><description>how to install pip install pyautogui
Finding Coordinate It will display current mouse coordinate every second.
import pyautogui import time while True: print(&amp;#34;Current Mouse Position : &amp;#34;, pyautogui.position()) time.sleep(1) mouse control import pyautogui pyautogui.moveTo(300, 300) # move (x=300, y=300) pyautogui.moveRel(x, y, t) # move (from current pos, move x and y with time. If t is 2, it will take 2 second to move) pyautogui.click() # click pyautogui.doubleClick() # double click pyautogui.</description></item><item><title>Tuple of Data Structures in Python</title><link>https://eunhanlee.github.io/post/tuple-of-data-structures-in-python/</link><pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/tuple-of-data-structures-in-python/</guid><description>Tuple Definition One of the data structure in python. Almost same as List But Tuple is not editable. Object. Data Structures in Python List Tuple Dictionary set declaration use &amp;ldquo;(&amp;rdquo; and &amp;ldquo;)&amp;rdquo; to declear. But, if there is a element in Tuple, you need to add comma
tuple1=(1,) tuple2=(1,2,3) notTuple=(0) #wrong, this is int type. comma needed index structure same as List
characteristic Tuple is not editable.</description></item><item><title>List of Data Structures in Python</title><link>https://eunhanlee.github.io/post/list-of-data-structures-in-python/</link><pubDate>Wed, 15 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/list-of-data-structures-in-python/</guid><description>List Definition One of the data structure in python. Almost same as array in other languages. Object. Data Structures in Python List Tuple Dictionary set declaration temp=[] temp=list() temp=[5,9,44] index structure characteristic List in List is possible. This is same as 2D array in other languages String in python is same as List
slicing [starting index : ending index-1 : condition index]
[0:8:3] = select index 0 to 7 by adding 3 [:8:] = select index 0 to 7 by adding 1 [7::] = select index 7 to -1 by adding 1 [::-1] = select index 0 to -1 by adding -1 a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] print(a[0:8:3]) # [0, 3, 6] print(a[:8:]) # [0, 1, 2, 3, 4, 5, 6, 7] print(a[7::]) # [7, 8, 9] print(a[::-1]) # [9, 8, 7, 6, 5, 4, 3, 2, 1, 0] Arithmetic Operation a=[1,2,3] b=[&amp;#34;apple&amp;#34;,&amp;#34;house&amp;#34;,&amp;#34;computer&amp;#34;] print(a+b) # [1, 2, 3, &amp;#39;apple&amp;#39;, &amp;#39;house&amp;#39;, &amp;#39;computer&amp;#39;] # print(a+3) # error # print(a-b) # error # print(a-3) # error # print(a*b) # error print(b*3) # [&amp;#39;apple&amp;#39;, &amp;#39;house&amp;#39;, &amp;#39;computer&amp;#39;, &amp;#39;apple&amp;#39;, &amp;#39;house&amp;#39;, &amp;#39;computer&amp;#39;, &amp;#39;apple&amp;#39;, &amp;#39;house&amp;#39;, &amp;#39;computer&amp;#39;] print(b*0) # [] # print(a/b) # error # print(a/3) # error add element append() = add a new element behind extend() = add new elements behind insert() = add new elements by index [] = add new elements by index condition a=[1,2,3,4,5,6,7,8,9] b=[&amp;#34;apple&amp;#34;,&amp;#34;house&amp;#34;,&amp;#34;computer&amp;#34;] a.</description></item><item><title>Arithmetic Operation in Python</title><link>https://eunhanlee.github.io/post/arithmetic-operation-in-python/</link><pubDate>Fri, 03 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/arithmetic-operation-in-python/</guid><description>kinds of Arithmetic Operation in Python Symbol explaination return + Addition depend on input type - Subtraction depend on input type * Multiplication depend on input type / Division real number // Division Integer % Remaineder real number ** power of depend on input type and and logic gare T or F or or logic gate T or F &amp;lt; less than T or F &amp;gt; greater than T or F &amp;lt;= less than or equal T or F &amp;gt;= greater than or equal T or F == equal T or F Result +, -, *, /, //, %, **, &amp;lt;, &amp;gt;, &amp;lt;=, &amp;gt;= table A B result int int int A+B result int float float A+B result int bool-T int A+1 result int bool-F int A+0 result int none TypeError int String TypeError float bool-T float A+1 result float bool-F float A+0 result float none TypeError float String TypeError bool none TypeError bool String TypeError none String TypeError When computer created and programming language started, 1 was true and 0 was false.</description></item><item><title>Variables of Python</title><link>https://eunhanlee.github.io/post/variables-of-python/</link><pubDate>Thu, 02 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/variables-of-python/</guid><description>Kinds of Variables scalar and non-scalar both object
scalar int : integer float : real number bool : True or False none : Null non-scalar String : data values that are made up of ordered sequences of characters, such as &amp;ldquo;hello world&amp;rdquo; checking data type print(type(Variable)) Case-Sensitive a and A are different variable
Casting x = str(3) # &amp;#34;4&amp;#34; y = int(3) # 4 z = float(3) # 4.</description></item></channel></rss>