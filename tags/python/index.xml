<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Eunhan's library</title><link>https://eunhanlee.github.io/tags/python/</link><description>Recent content in Python on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Thu, 18 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>conditional and loop statement in Python-if, for, while</title><link>https://eunhanlee.github.io/post/conditional-statement-and-loop-statement-in-python-if-for-while/</link><pubDate>Thu, 18 Nov 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/conditional-statement-and-loop-statement-in-python-if-for-while/</guid><description>conditional statement and loop statement in Python conditional statement (if statement) One Condition Keyword: if if [condition] : [space]code you want to learn
Multiple Condition Keyword: elif if must there before use elif if [condition] : [space]code you want to learn elif [condition] : [space]code you want to learn elif [condition] : [space]code you want to learn Other than Condition Keyword: else if must there before use else if [condition] : [space]code you want to learn else : [space]code you want to learn if Statement Example a = 3 if a &amp;gt; 5: print(&amp;#34;a is bigger than 5&amp;#34;) elif a &amp;gt; 0: print(&amp;#34;a is bigger than 0 but smaller than 5&amp;#34;) else: print(&amp;#34;a is negative&amp;#34;) Loop Statement (for Statement) Repeat Example 10 times loop for i in range(10): print(&amp;#34;Hi&amp;#34;) list loop Example Repeat as much as elements in list a = [&amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;C&amp;#34;] for i in a: print(i) # A B C list loop with index Example Repeat as much as elements in list for i, j in enumerate(a): print(i, &amp;#34;:&amp;#34;, j) # 0 : A # 1 : B # 2 : C add two list and loop Example The pair&amp;rsquo;s data type is tuple numbers = [9, 7, 7] letters = [&amp;#34;z&amp;#34;, &amp;#34;x&amp;#34;, &amp;#34;y&amp;#34;] for pair in zip(numbers, letters): print(pair) # (9, &amp;#39;z&amp;#39;) # (7, &amp;#39;x&amp;#39;) # (7, &amp;#39;y&amp;#39;) Loop with certain index Example 5 to 9 for i in range(5, 10): # 5 ~ 9 print(&amp;#34;Hello&amp;#34;, i) # Hello 5 # Hello 6 # Hello 7 # Hello 8 # Hello 9 loop until certain condition loop until i is &amp;ldquo;o&amp;rdquo; a = &amp;#34;balloon&amp;#34; for i in a: print(i) if i == &amp;#34;o&amp;#34;: break # b a l l o Loop Statement (while Statement) loop until certain condition loop until i is bigger than 5 i = 0 while i &amp;lt; 5: print(i) i = i + 1 # 0 1 2 3 4</description></item><item><title>Set of Data Structures in Python</title><link>https://eunhanlee.github.io/post/set-of-data-structures-in-python/</link><pubDate>Wed, 17 Nov 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/set-of-data-structures-in-python/</guid><description>Set Definition One of the data structure in python. Create set of data Data Structures in Python List: Tuple: ( ) Dictionary: { key : value } set: { } declaration use { and } to declare setA={1,3,4,&amp;#34;test&amp;#34;} # {1, &amp;#39;test&amp;#39;, 3, 4} setB={2,4,&amp;#34;test&amp;#34;,5,6} # {2, &amp;#39;test&amp;#39;, 4, 5, 6} Characteristics No duplicated value Do not care about order set algebra(union, intersection, difference, symmetric difference) Set Algebra union Keyword: &amp;ldquo;|&amp;rdquo;, &amp;ldquo;union()&amp;rdquo;</description></item><item><title>Dictionary of Data Structures in Python</title><link>https://eunhanlee.github.io/post/dictionary-of-data-structures-in-python/</link><pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/dictionary-of-data-structures-in-python/</guid><description>Dictionary Definition One of the data structure in python. has key and value bined. You can fine value when you know the key very slimier with hashmap Data Structures in Python List Tuple Dictionary set declaration use { and } to declare the value can be list the key can be int or string. But not list. (TypeError: unhashable type: &amp;lsquo;list&amp;rsquo;) dictionary={&amp;#34;key1&amp;#34;:&amp;#34;value1&amp;#34;,&amp;#34;key2&amp;#34;:&amp;#34;value2&amp;#34;,&amp;#34;key3&amp;#34;:&amp;#34;value3&amp;#34;} how to use indexing like List get() method difference between the indexing and get method If key does not exist, the indexing will return error.</description></item><item><title>[python code]get Coordinate by image</title><link>https://eunhanlee.github.io/post/python-codeget-coordinate-by-image/</link><pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/python-codeget-coordinate-by-image/</guid><description>get Coordinate by image pyautogui started left-top side of monster. If there are multiple images on screen, only return the coordinate of most left-top side image. If there is no same image, return FileNotFoundError
import pyautogui def getCoordinateByImg(imgAddress): imgLocatedCoordinate = pyautogui.locateOnScreen(imgAddress) # get image from the address if (imgLocatedCoordinate): return pyautogui.center(imgLocatedCoordinate) # return the center coordinate. else: print(&amp;#34;image never found&amp;#34;) raise FileNotFoundError 에러 pyscreeze.PyScreezeException: The Pillow package is required to use this function: type &amp;ldquo;pip install Pillow &amp;ndash;upgrade&amp;rdquo; in terminal</description></item><item><title>[python code] keyboard and mouse control</title><link>https://eunhanlee.github.io/post/python-code-keyboard-and-mouse-control/</link><pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/python-code-keyboard-and-mouse-control/</guid><description>how to install pip install pyautogui
Finding Coordinate It will display current mouse coordinate every second.
import pyautogui import time while True: print(&amp;#34;Current Mouse Position : &amp;#34;, pyautogui.position()) time.sleep(1) mouse control import pyautogui pyautogui.moveTo(300, 300) # move (x=300, y=300) pyautogui.moveRel(x, y, t) # move (from current pos, move x and y with time. If t is 2, it will take 2 second to move) pyautogui.click() # click pyautogui.doubleClick() # double click pyautogui.</description></item><item><title>Tuple of Data Structures in Python</title><link>https://eunhanlee.github.io/post/tuple-of-data-structures-in-python/</link><pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/tuple-of-data-structures-in-python/</guid><description>Tuple Definition One of the data structure in python. Almost same as List But Tuple is not editable. Object. Data Structures in Python List Tuple Dictionary set declaration use &amp;ldquo;(&amp;rdquo; and &amp;ldquo;)&amp;rdquo; to declear. But, if there is a element in Tuple, you need to add comma
tuple1=(1,) tuple2=(1,2,3) notTuple=(0) #wrong, this is int type. comma needed index structure same as List
characteristic Tuple is not editable.</description></item><item><title>List of Data Structures in Python</title><link>https://eunhanlee.github.io/post/list-of-data-structures-in-python/</link><pubDate>Wed, 15 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/list-of-data-structures-in-python/</guid><description>List Definition One of the data structure in python. Almost same as array in other languages. Object. Data Structures in Python List Tuple Dictionary set declaration temp=[] temp=list() temp=[5,9,44] index structure characteristic List in List is possible. This is same as 2D array in other languages String in python is same as List
slicing [starting index : ending index-1 : condition index]
[0:8:3] = select index 0 to 7 by adding 3 [:8:] = select index 0 to 7 by adding 1 [7::] = select index 7 to -1 by adding 1 [::-1] = select index 0 to -1 by adding -1 a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] print(a[0:8:3]) # [0, 3, 6] print(a[:8:]) # [0, 1, 2, 3, 4, 5, 6, 7] print(a[7::]) # [7, 8, 9] print(a[::-1]) # [9, 8, 7, 6, 5, 4, 3, 2, 1, 0] Arithmetic Operation a=[1,2,3] b=[&amp;#34;apple&amp;#34;,&amp;#34;house&amp;#34;,&amp;#34;computer&amp;#34;] print(a+b) # [1, 2, 3, &amp;#39;apple&amp;#39;, &amp;#39;house&amp;#39;, &amp;#39;computer&amp;#39;] # print(a+3) # error # print(a-b) # error # print(a-3) # error # print(a*b) # error print(b*3) # [&amp;#39;apple&amp;#39;, &amp;#39;house&amp;#39;, &amp;#39;computer&amp;#39;, &amp;#39;apple&amp;#39;, &amp;#39;house&amp;#39;, &amp;#39;computer&amp;#39;, &amp;#39;apple&amp;#39;, &amp;#39;house&amp;#39;, &amp;#39;computer&amp;#39;] print(b*0) # [] # print(a/b) # error # print(a/3) # error add element append() = add a new element behind extend() = add new elements behind insert() = add new elements by index [] = add new elements by index condition a=[1,2,3,4,5,6,7,8,9] b=[&amp;#34;apple&amp;#34;,&amp;#34;house&amp;#34;,&amp;#34;computer&amp;#34;] a.</description></item><item><title>Arithmetic Operation in Python</title><link>https://eunhanlee.github.io/post/arithmetic-operation-in-python/</link><pubDate>Fri, 03 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/arithmetic-operation-in-python/</guid><description>kinds of Arithmetic Operation in Python Symbol explaination return + Addition depend on input type - Subtraction depend on input type * Multiplication depend on input type / Division real number // Division Integer % Remaineder real number ** power of depend on input type and and logic gare T or F or or logic gate T or F &amp;lt; less than T or F &amp;gt; greater than T or F &amp;lt;= less than or equal T or F &amp;gt;= greater than or equal T or F == equal T or F Result +, -, *, /, //, %, **, &amp;lt;, &amp;gt;, &amp;lt;=, &amp;gt;= table A B result int int int A+B result int float float A+B result int bool-T int A+1 result int bool-F int A+0 result int none TypeError int String TypeError float bool-T float A+1 result float bool-F float A+0 result float none TypeError float String TypeError bool none TypeError bool String TypeError none String TypeError When computer created and programming language started, 1 was true and 0 was false.</description></item><item><title>Variables of Python</title><link>https://eunhanlee.github.io/post/variables-of-python/</link><pubDate>Thu, 02 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/variables-of-python/</guid><description>Kinds of Variables scalar and non-scalar both object
scalar int : integer float : real number bool : True or False none : Null non-scalar String : data values that are made up of ordered sequences of characters, such as &amp;ldquo;hello world&amp;rdquo; checking data type print(type(Variable)) Case-Sensitive a and A are different variable
Casting x = str(3) # &amp;#34;4&amp;#34; y = int(3) # 4 z = float(3) # 4.</description></item></channel></rss>