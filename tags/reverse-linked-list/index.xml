<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reverse Linked List on Eunhan's library</title><link>https://eunhanlee.github.io/tags/reverse-linked-list/</link><description>Recent content in Reverse Linked List on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Fri, 16 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/reverse-linked-list/index.xml" rel="self" type="application/rss+xml"/><item><title>Reverse Linked List</title><link>https://eunhanlee.github.io/post/reverse-linked-list/</link><pubDate>Fri, 16 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/reverse-linked-list/</guid><description>Problem Problem_Link
1 hour limit no search on internet Reverse a singly linked list.
Example:
Input: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL Output: 5-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;1-&amp;gt;NULL Follow up:
A linked list can be reversed either iteratively or recursively. Could you implement both?
My Answer My code class Solution { public ListNode reverseList(ListNode head) { Stack&amp;lt;ListNode&amp;gt; stack = new Stack&amp;lt;&amp;gt;(); while (head != null) { stack.push(head); head = head.next; } ListNode rtnHead = new ListNode(); ListNode temp = rtnHead; while (!</description></item></channel></rss>