<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java Dictionary on Eunhan's library</title><link>https://eunhanlee.github.io/tags/java-dictionary/</link><description>Recent content in Java Dictionary on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Mon, 12 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/java-dictionary/index.xml" rel="self" type="application/rss+xml"/><item><title>[JAVA code]for loop</title><link>https://eunhanlee.github.io/post/java-codefor-loop/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codefor-loop/</guid><description> variables in for statement will not keep memory after loop is finished
break : finish the whole loop
continue : skip last and move to next loop
0~9 loop
for (int i = 0; i &amp;lt; 10; i++) { } 10~0 loop for (int i = 10; i &amp;gt; -1; i--) { } only read the arr, cannot modify for (String str : arr) { }</description></item><item><title>[JAVA code]hashmap</title><link>https://eunhanlee.github.io/post/java-codehashmap/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codehashmap/</guid><description>private HashMap&amp;lt;Character, Character&amp;gt; map; this.map = new HashMap&amp;lt;&amp;gt;(); HashMap&amp;lt;String,String&amp;gt; map = new HashMap&amp;lt;&amp;gt;(map1);// HashMap that has same key and values as map1 HashMap&amp;lt;String,String&amp;gt; map2 = new HashMap&amp;lt;&amp;gt;(10);// set capacity defult is 16 map.put(&amp;#34;a&amp;#34;,&amp;#34;b&amp;#34;); //add map.get(&amp;#34;a&amp;#34;);//if not there, return null map.getOrDefault(&amp;#34;a&amp;#34;,&amp;#34;no value&amp;#34;);//if not there, return 2nd parameter &amp;#34;no value&amp;#34; map.isEmpty()//T or F for all data map.size() //return how may keys map.containsKey( key )//check key is there map.containsValue( value )//check value is there map.</description></item><item><title>[JAVA code]Lexicographical order</title><link>https://eunhanlee.github.io/post/java-codelexicographical-order/</link><pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codelexicographical-order/</guid><description> Time complexity : $O(n\ log\ n)$ Space complexity : $O(1)$ Collections.sort(List&amp;lt;String&amp;gt;_values); Arrays.sort(String[]array); Time complexity : $O(n^2)$ Space complexity : $O(1)$ public static String[] LexicalOrder(String[] words) { int n = words.length; for (int i = 0; i &amp;lt; n - 1; ++i) { for (int j = i + 1; j &amp;lt; n; ++j) { if (words[i].compareTo(words[j]) &amp;gt; 0) { String temp = words[i]; words[i] = words[j]; words[j] = temp; } } } return words; }</description></item><item><title>[JAVA code]reverse node</title><link>https://eunhanlee.github.io/post/java-codereverse-linkedlist/</link><pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codereverse-linkedlist/</guid><description> Time complexity : $O(n)$ Space complexity : $O(1)$ public static ListNode reverse(ListNode head) { ListNode prev = null; while (head != null) { ListNode next = head.next; head.next = prev; prev = head; head = next; } return prev; }</description></item></channel></rss>