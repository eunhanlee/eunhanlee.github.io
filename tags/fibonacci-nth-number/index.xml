<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Fibonacci nth number on Eunhan's library</title><link>https://eunhanlee.github.io/tags/fibonacci-nth-number/</link><description>Recent content in Fibonacci nth number on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Mon, 12 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/fibonacci-nth-number/index.xml" rel="self" type="application/rss+xml"/><item><title>[JAVA code]get Fibonacci nth number</title><link>https://eunhanlee.github.io/post/java-codeget-fibonacci-nth-number/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codeget-fibonacci-nth-number/</guid><description>math public int fib(int N) { double goldenRatio = (1 + Math.sqrt(5)) / 2; return (int)Math.round(Math.pow(goldenRatio, N)/ Math.sqrt(5)); } recuresive unsigned int fibonacci_rcsv(unsigned int n) { if (n == 0) return 0; else if (n == 1) return 1; else return fibonacci_rcsv(n - 2) + fibonacci_rcsv(n - 1); } Repeat unsigned int fibonacci_iter(unsigned int n) { if (n == 0) return 0; else if (n == 1) return 1; else { int result = 0; int iterA = 0; int iterB = 1; for (int i = 2; i &amp;lt;= n; i++) { result = iterA + iterB; iterA = iterB; iterB = result; } return result; } }</description></item></channel></rss>