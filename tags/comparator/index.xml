<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>comparator on Eunhan's library</title><link>https://eunhanlee.github.io/tags/comparator/</link><description>Recent content in comparator on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Wed, 14 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/comparator/index.xml" rel="self" type="application/rss+xml"/><item><title>what is comparator in Java</title><link>https://eunhanlee.github.io/post/javacomparator/</link><pubDate>Wed, 14 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/javacomparator/</guid><description>Hierarchy package: java.util.Comparator
Definition Sorting interface that designed for mutiple conditions by creating compare method. For example, you can sort list in ascending order of size and descending order of letters.
about the compare() method if compare() method return positive number, swap the input parameters
else will be remain same
condition return First parameter &amp;lt; second parameter negative First parameter == second parameter 0 First parameter &amp;gt; second parameter positive How to use MyComparator implements Comparator&amp;lt;&amp;gt;</description></item><item><title>what is diffence between comparator and compatable in JAVA</title><link>https://eunhanlee.github.io/post/what-is-diffence-between-comparator-and-compatable-in-java/</link><pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-diffence-between-comparator-and-compatable-in-java/</guid><description>Comparable Comparator java.lang package. java.util package. Sorting interface that designed for a condition interface that designed for mutiple conditions Comparable affects the original class Comparator doesn&amp;rsquo;t affect the original class compareTo() method with 1 parameter compare() method with 2 parameters Collections.sort(List) Collections.sort(List, Comparator) Arrays.sort(array) Arrays.sort(array, myComparator); Definition Both interfaces are very similer because they are for sorting lists and arrays.</description></item></channel></rss>