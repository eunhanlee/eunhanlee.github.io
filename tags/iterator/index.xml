<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>iterator on Eunhan's library</title><link>https://eunhanlee.github.io/tags/iterator/</link><description>Recent content in iterator on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Tue, 13 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/iterator/index.xml" rel="self" type="application/rss+xml"/><item><title>what is iterator in Java</title><link>https://eunhanlee.github.io/post/javaiterator/</link><pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/javaiterator/</guid><description>Definition Interface that can read any class in the collection framework.
Thus, we can read arraylist or linkedlist or hashmap with iterator.
why we use iterator? Since we can read any list or set with iterator, we do not have to fix or change code when you work with big projects.
Hierarchy method hasNext() next() remove()
Example List list = new ArrayList();// arrayList list.add(&amp;#34;1&amp;#34;); list.add(&amp;#34;2&amp;#34;); list.add(&amp;#34;3&amp;#34;); Iterator &amp;lt;string&amp;gt; itr = list.</description></item></channel></rss>