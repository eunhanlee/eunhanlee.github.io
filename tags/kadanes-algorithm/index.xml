<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kadane's Algorithm on Eunhan's library</title><link>https://eunhanlee.github.io/tags/kadanes-algorithm/</link><description>Recent content in Kadane's Algorithm on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Mon, 19 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/kadanes-algorithm/index.xml" rel="self" type="application/rss+xml"/><item><title>Kadane's Algorithm</title><link>https://eunhanlee.github.io/post/kadanes-algorithm/</link><pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/kadanes-algorithm/</guid><description>Purpose Find maximum sum of contiguous values in an array. The array order must not change.
Example If there is $[-2, 1, -3, 4, -1, 2, 1, -5, 4] $
$[4, -1, 2, 1]$ is the answer
4+(-1)+2+1=6, this is bigger than any other contiguous values.
Complexity Analysis Time complexity : $O(N)$ since it&amp;rsquo;s one pass along the array. Space complexity : $O(1)$, since it&amp;rsquo;s a constant space solution. Explanation For finding maxium number, we need to calculate all of possible numbers and compare.</description></item></channel></rss>