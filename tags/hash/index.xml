<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hash on Eunhan's library</title><link>https://eunhanlee.github.io/tags/hash/</link><description>Recent content in hash on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Mon, 19 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/hash/index.xml" rel="self" type="application/rss+xml"/><item><title>what is hashmap in Java</title><link>https://eunhanlee.github.io/post/hashmap/</link><pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/hashmap/</guid><description>Definition Hashmap basically solves the problem of searching objects from large set.
When should we use it large set of objects frequent access to objects required. methods method result time complexity HashMap&amp;lt;String,String&amp;gt; map = new HashMap&amp;lt;&amp;gt;(); create hashmap constructor put( key, value ) add key and value usually O(1) remove( key ) remove the key usually O(1) get( key ) get value from the key usually O(1) isEmpty() T or F for all data O(n) size() return how may keys O(n) containsKey( key ) check key is there usually O(1) containsValue( value ) check value is there usually O(1) getOrDefault( key, value) get value from the key.</description></item></channel></rss>