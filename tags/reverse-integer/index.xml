<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reverse Integer on Eunhan's library</title><link>https://eunhanlee.github.io/tags/reverse-integer/</link><description>Recent content in Reverse Integer on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Wed, 21 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/reverse-integer/index.xml" rel="self" type="application/rss+xml"/><item><title>Reverse Integer</title><link>https://eunhanlee.github.io/post/reverse-integer/</link><pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/reverse-integer/</guid><description>Problem Problem_Link
1 hour limit no search on internet Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.
Assume the environment does not allow you to store 64-bit integers (signed or unsigned).
Example 1:
Input: x = 123 Output: 321 Example 2:
Input: x = -123 Output: -321 Example 3:</description></item></channel></rss>