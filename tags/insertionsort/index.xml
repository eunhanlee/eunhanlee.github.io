<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>InsertionSort on Eunhan's library</title><link>https://eunhanlee.github.io/tags/insertionsort/</link><description>Recent content in InsertionSort on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Wed, 15 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/insertionsort/index.xml" rel="self" type="application/rss+xml"/><item><title>Insertion Sort</title><link>https://eunhanlee.github.io/post/insertion-sort/</link><pubDate>Wed, 15 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/insertion-sort/</guid><description>Definition one of sort algorithms
Technique Brute Force
Algorithm steps first loop first to the end compare looping number and left side. if left side number is bigger than right side, swap them. since number swapped, check left side numbers and make sure the left side is getting smaller step 4 means that if left side is small and does not swap, it does not need to check further. Repeat 1~5 until all of them sorted.</description></item></channel></rss>