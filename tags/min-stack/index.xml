<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Min Stack on Eunhan's library</title><link>https://eunhanlee.github.io/tags/min-stack/</link><description>Recent content in Min Stack on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Tue, 04 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/min-stack/index.xml" rel="self" type="application/rss+xml"/><item><title>Min Stack</title><link>https://eunhanlee.github.io/post/min-stack/</link><pubDate>Tue, 04 May 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/min-stack/</guid><description>Problem Problem_Link
1 hour limit no search on internet Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.
push(x) &amp;ndash; Push element x onto stack. pop() &amp;ndash; Removes the element on top of the stack. top() &amp;ndash; Get the top element. getMin() &amp;ndash; Retrieve the minimum element in the stack. Example 1:
Input [&amp;quot;MinStack&amp;quot;,&amp;quot;push&amp;quot;,&amp;quot;push&amp;quot;,&amp;quot;push&amp;quot;,&amp;quot;getMin&amp;quot;,&amp;quot;pop&amp;quot;,&amp;quot;top&amp;quot;,&amp;quot;getMin&amp;quot;] [[],[-2],[0],[-3],[],[],[],[]] Output [null,null,null,null,-3,null,0,-2] Explanation MinStack minStack = new MinStack(); minStack.</description></item></channel></rss>