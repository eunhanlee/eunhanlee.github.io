<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DataStructure on Eunhan's library</title><link>https://eunhanlee.github.io/tags/datastructure/</link><description>Recent content in DataStructure on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Mon, 25 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/datastructure/index.xml" rel="self" type="application/rss+xml"/><item><title>Tuple of Data Structures in Python</title><link>https://eunhanlee.github.io/post/tuple-of-data-structures-in-python/</link><pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/tuple-of-data-structures-in-python/</guid><description>Tuple Definition One of the data structure in python. Almost same as List But Tuple is not editable. Object. Data Structures in Python List Tuple Dictionary set declaration use &amp;ldquo;(&amp;rdquo; and &amp;ldquo;)&amp;rdquo; to declear. But, if there is a element in Tuple, you need to add comma
tuple1=(1,) tuple2=(1,2,3) notTuple=(0) #wrong, this is int type. comma needed index structure same as List
characteristic Tuple is not editable.</description></item><item><title>List of Data Structures in Python</title><link>https://eunhanlee.github.io/post/list-of-data-structures-in-python/</link><pubDate>Wed, 15 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/list-of-data-structures-in-python/</guid><description>List Definition One of the data structure in python. Almost same as array in other languages. Object. Data Structures in Python List Tuple Dictionary set declaration temp=[] temp=list() temp=[5,9,44] index structure characteristic List in List is possible. This is same as 2D array in other languages String in python is same as List
slicing [starting index : ending index-1 : condition index]
[0:8:3] = select index 0 to 7 by adding 3 [:8:] = select index 0 to 7 by adding 1 [7::] = select index 7 to -1 by adding 1 [::-1] = select index 0 to -1 by adding -1 a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] print(a[0:8:3]) # [0, 3, 6] print(a[:8:]) # [0, 1, 2, 3, 4, 5, 6, 7] print(a[7::]) # [7, 8, 9] print(a[::-1]) # [9, 8, 7, 6, 5, 4, 3, 2, 1, 0] Arithmetic Operation a=[1,2,3] b=[&amp;#34;apple&amp;#34;,&amp;#34;house&amp;#34;,&amp;#34;computer&amp;#34;] print(a+b) # [1, 2, 3, &amp;#39;apple&amp;#39;, &amp;#39;house&amp;#39;, &amp;#39;computer&amp;#39;] # print(a+3) # error # print(a-b) # error # print(a-3) # error # print(a*b) # error print(b*3) # [&amp;#39;apple&amp;#39;, &amp;#39;house&amp;#39;, &amp;#39;computer&amp;#39;, &amp;#39;apple&amp;#39;, &amp;#39;house&amp;#39;, &amp;#39;computer&amp;#39;, &amp;#39;apple&amp;#39;, &amp;#39;house&amp;#39;, &amp;#39;computer&amp;#39;] print(b*0) # [] # print(a/b) # error # print(a/3) # error add element append() = add a new element behind extend() = add new elements behind insert() = add new elements by index [] = add new elements by index condition a=[1,2,3,4,5,6,7,8,9] b=[&amp;#34;apple&amp;#34;,&amp;#34;house&amp;#34;,&amp;#34;computer&amp;#34;] a.</description></item></channel></rss>