<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>code knowledge on Eunhan's library</title><link>https://eunhanlee.github.io/tags/code-knowledge/</link><description>Recent content in code knowledge on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Mon, 12 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/code-knowledge/index.xml" rel="self" type="application/rss+xml"/><item><title>[Java]Primitive type and Reference type</title><link>https://eunhanlee.github.io/post/javaprimitive-type-and-reference-type/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/javaprimitive-type-and-reference-type/</guid><description>Primitive type JAVA provides 8 kinds of Primitive type There is no null value. Defult value is already inserted. actual value will saved in Stack memory. String is object. Not primitive type. Data Type Allocated Memory Defult Value Range of Data Range of Data in Number boolean 1 byte false true, false byte 1 byte 0 -127 ~ 128 $-2^{7}$~ $(2^{7}-1)$ short 2 byte 0 -32,768 ~ 32,767 $-2^{15}$~ $(2^{15}-1)$ int 4 byte 0 -2,147,483,648 ~ 2,147,483,647 $-2^{31}$~ $(2^{31}-1)$ long 8 byte 0L -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807 $-2^{63}$~ $(2^{63}-1)$ float 4 byte 0.</description></item><item><title>Fibonacci sequence</title><link>https://eunhanlee.github.io/post/fibonacci-sequence/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/fibonacci-sequence/</guid><description>Definition Certain patterns of numbers.
first and second numbers are always 0,1. next number is addition of previous two numbers
Recurrence Relation $F_0=0$
$F_1=1$
$F_n=F_{n-1}+F_{n-2}$
Example index fibonacci numbers calculation 0 0 0 1 1 1 2 1 0+1 3 2 1+1 4 3 1+2 5 5 2+3 6 8 3+5 7 13 5+8 8 21 8+13 9 34 13+21 10 55 21+34 11 89 34+55 12 144 55+89 13 233 89+144 14 377 144+233 15 610 233+377 16 987 377+610 get nth fibonacci number Repeat unsigned int fibonacci_iter(unsigned int n) { if (n == 0) return 0; else if (n == 1) return 1; else { int result = 0; int iterA = 0; int iterB = 1; for (int i = 2; i &amp;lt;= n; i++) { result = iterA + iterB; iterA = iterB; iterB = result; } return result; } } recuresive unsigned int fibonacci_rcsv(unsigned int n) { if (n == 0) return 0; else if (n == 1) return 1; else return fibonacci_rcsv(n - 2) + fibonacci_rcsv(n - 1); } math public int fib(int N) { double goldenRatio = (1 + Math.</description></item><item><title>Dynamic Programming</title><link>https://eunhanlee.github.io/post/dynamic-programming/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/dynamic-programming/</guid><description>Definition algorithmic problem solving technique that split into many simple subproblems and reduce steps of subproblems. In other wards, separates into subproblems and get solution by addition of all subproblems.
Example if you calculate $2^1+2^2+2^3+2^4+2^5$ and display each numbers,
$2^1=2=2$
$2^2=2+2=2^1+2$
$2^3=2+2+2=2^2+2$
$2^4=2+2+2+2=2^3+2$
$2^5=2+2+2+2+2=2^4+2$
since you need to calculate each of numbers ($2^1,2^2,2^3,2^4,2^5$), you can skip some of parts that you already calculated. When you calculate the $2^5$, you done have to calculate $2^4$ if that number $2^4$ is already calculated.</description></item><item><title>inclusive and exclusive</title><link>https://eunhanlee.github.io/post/inclusive-and-exclusive/</link><pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/inclusive-and-exclusive/</guid><description>Inclusive - Including the last number
Exclusive - Excluding the last number
In Computer Science, inclusive/exclusive apply to a number range
Example inclusive If a function will compute \(2^i\) where \(i = 1, 2, ..., n\).
\(i\) can have values from 1 up to and including the value n.
We says, n is Included in Inclusive
1 through 10 (inclusive) = [1, 10] 1 2 3 4 5 6 7 8 9 10 exclusive If a function will compute $2^i$ where i = 1, 2, .</description></item></channel></rss>