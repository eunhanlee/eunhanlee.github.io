<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RemoveDuplicatesfromSortedArray on Eunhan's library</title><link>https://eunhanlee.github.io/tags/removeduplicatesfromsortedarray/</link><description>Recent content in RemoveDuplicatesfromSortedArray on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Fri, 10 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/removeduplicatesfromsortedarray/index.xml" rel="self" type="application/rss+xml"/><item><title>Remove Duplicates from Sorted Array</title><link>https://eunhanlee.github.io/post/remove-duplicates-from-sorted-array/</link><pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/remove-duplicates-from-sorted-array/</guid><description>Problem Problem_Link
My Answer 1 hour limit no search on internet My code class Solution { public int removeDuplicates(int[] nums) { if(nums==null ||nums.length==0) return 0; int temp = -101; int count=0; int pos=0; for(int i=0;i&amp;lt;nums.length;++i){ if(temp!=nums[i]){ temp=nums[i]; nums[pos]=nums[i]; ++count; ++pos; } } return count; } } Time complexity : $O(n)$ Space complexity : $O(1)$ My result Runtime: 2 ms, faster than 22.76% of Java online submissions for Remove Duplicates from Sorted Array.</description></item></channel></rss>