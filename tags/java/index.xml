<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on Eunhan's library</title><link>https://eunhanlee.github.io/tags/java/</link><description>Recent content in Java on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Thu, 09 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>what is comparator in Java</title><link>https://eunhanlee.github.io/post/what-is-comparator-in-java/</link><pubDate>Thu, 09 Dec 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-comparator-in-java/</guid><description>Hierarchy package: java.util.Comparator
Definition Sorting interface that designed for mutiple special conditions by creating compare method. For example, you can sort list in ascending order of size and descending order of letters.
about the compare() method if compare() method return positive number, swap the input parameters
else will be remain same
condition return First parameter &amp;lt; second parameter negative First parameter == second parameter 0 First parameter &amp;gt; second parameter positive How to use MyComparator implements Comparator&amp;lt;&amp;gt;</description></item><item><title>what is iterator in Java</title><link>https://eunhanlee.github.io/post/what-is-iterator-in-java/</link><pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-iterator-in-java/</guid><description>Definition Interface that can read any class in the collection framework.
Thus, we can read arraylist or linkedlist or hashmap with iterator.
why we use iterator? Since we can read any list or set with iterator, we do not have to fix or change code when you work with big projects.
Hierarchy method hasNext() next() remove()
method Example List list = new ArrayList();// arrayList list.add(&amp;#34;1&amp;#34;); list.add(&amp;#34;2&amp;#34;); list.add(&amp;#34;3&amp;#34;); Iterator &amp;lt;string&amp;gt; itr = list.</description></item><item><title>what is enum class in Java</title><link>https://eunhanlee.github.io/post/what-is-enum-class-in-java/</link><pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-enum-class-in-java/</guid><description>Definition enum class is for define constant. It will contain the value that will not change during the program is working
Reason for using the enum class Sometimes, the program need constant value that should not changed. We use enum class for define the value. We calls, &amp;ldquo;define Constant&amp;rdquo;
History The notion of constant is came from C language. C used define Preprocessor and const keyward.
C code example #include &amp;lt;stdio.</description></item><item><title>what is diffence between comparator and compatable in JAVA</title><link>https://eunhanlee.github.io/post/what-is-diffence-between-comparator-and-compatable-in-java/</link><pubDate>Wed, 25 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-diffence-between-comparator-and-compatable-in-java/</guid><description>Definition Both interfaces are very similer because they are for sorting lists and arrays. However, one is for one condition and other one is for mutiple conditions.
Difference Comparable Comparator java.lang package. java.util package. Comparable affects the original class Comparator doesn&amp;rsquo;t affect the original class compareTo() method with 1 parameter compare() method with 2 parameters Collections.sort(List) Collections.sort(List, Comparator) Arrays.</description></item><item><title>[JavaException]IllegalArgumentException</title><link>https://eunhanlee.github.io/post/javaexceptionillegalargumentexception/</link><pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/javaexceptionillegalargumentexception/</guid><description>Reason Thrown to indicate that a method has been passed an illegal or inappropriate argument.
argument is actual values that are passed to variables If you put any actual values that is not correct for the variable, it will cause IllegalArgumentException
Example int a = 2147483649; // value is too big int a = -2147483649; // value is too small String date=&amp;#34;08-07-1990&amp;#34;; // format is dd-MM-yyyy Date format=new SimpleDateFormat(&amp;#34;dd/MM/yyyy&amp;#34;).parse(date);// format is different Solution check input value range check calculation that can be over the variable limitation use try-catch block</description></item><item><title>Primitive type and Reference type in Java</title><link>https://eunhanlee.github.io/post/primitive-type-and-reference-type-in-java/</link><pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/primitive-type-and-reference-type-in-java/</guid><description>Kinds of Data Type in Java Primitive type Java provides 8 kinds of Primitive type. Primitive data types cannot contain null actual value will saved in StackÂ memory. data type base memory defult value range of data range of data in number boolean 1 byte false true, false true, false byte 1 byte 0 -127 ~ 128 $-2^{7}$~ $(2^{7}-1)$ short 2 byte 0 -32,768 ~ 32,767 $-2^{15}$~ $(2^{15}-1)$ int 4 byte 0 -2,147,483,648 ~ 2,147,483,647 $-2^{31}$~ $(2^{31}-1)$ long 8 byte 0L -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807 $-2^{63}$~ $(2^{63}-1)$ float 4 byte 0.</description></item><item><title>what happen if + or - with Char in JAVA</title><link>https://eunhanlee.github.io/post/what-happen-if-+-or-with-char-in-java/</link><pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-happen-if-+-or-with-char-in-java/</guid><description>Result code result char type + int type return unicode char type - int type error int type + char type return unicode int type - char type error char type + char type return unicode char type - char type return unicode String is not Primitive Data Type. This is object example of use For lexicographical order for (int i = 0; i &amp;lt; order.</description></item><item><title>what is difference between Error and Exception in Java</title><link>https://eunhanlee.github.io/post/what-is-difference-between-error-and-exception-in-java/</link><pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-difference-between-error-and-exception-in-java/</guid><description>What is Error Programs run something that is not what programmers wanted or shutdown unexpectedly. Any causes of that action are Error.
Kinds of Errors compile-time error compile failed. usually, wrong lanuage keyword used. python does not understand &amp;ldquo;System.out.println&amp;rdquo; This code is for JAVA.
runtime error crash during the programs run. put values in int arr[5] that array size is 3
logical error programmer created wrong process. you wanted to put blue in variable x.</description></item><item><title>[JAVA code]reverse node</title><link>https://eunhanlee.github.io/post/java-codereverse-node/</link><pubDate>Thu, 19 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codereverse-node/</guid><description> public static ListNode reverse(ListNode head) { ListNode prev = null; while (head != null) { ListNode next = head.next; head.next = prev; prev = head; head = next; } return prev; } Time complexity : $O(n)$ Space complexity : $O(1)$ input : head node of LinkedList output : head node of LinkedList</description></item></channel></rss>