<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on Eunhan's library</title><link>https://eunhanlee.github.io/tags/java/</link><description>Recent content in Java on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Mon, 23 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>[JavaException]IllegalArgumentException</title><link>https://eunhanlee.github.io/post/javaexceptionillegalargumentexception/</link><pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/javaexceptionillegalargumentexception/</guid><description>Reason Thrown to indicate that a method has been passed an illegal or inappropriate argument.
argument is actual values that are passed to variables If you put any actual values that is not correct for the variable, it will cause IllegalArgumentException
Example int a = 2147483649; // value is too big int a = -2147483649; // value is too small String date=&amp;#34;08-07-1990&amp;#34;; // format is dd-MM-yyyy Date format=new SimpleDateFormat(&amp;#34;dd/MM/yyyy&amp;#34;).parse(date);// format is different Solution check input value range check calculation that can be over the variable limitation use try-catch block</description></item><item><title>Primitive type and Reference type in Java</title><link>https://eunhanlee.github.io/post/primitive-type-and-reference-type-in-java/</link><pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/primitive-type-and-reference-type-in-java/</guid><description>Kinds of Data Type in Java Primitive type Java provides 8 kinds of Primitive type. Primitive data types cannot contain null actual value will saved in StackÂ memory. data type base memory defult value range of data range of data in number boolean 1 byte false true, false true, false byte 1 byte 0 -127 ~ 128 $-2^{7}$~ $(2^{7}-1)$ short 2 byte 0 -32,768 ~ 32,767 $-2^{15}$~ $(2^{15}-1)$ int 4 byte 0 -2,147,483,648 ~ 2,147,483,647 $-2^{31}$~ $(2^{31}-1)$ long 8 byte 0L -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807 $-2^{63}$~ $(2^{63}-1)$ float 4 byte 0.</description></item><item><title>what happen if + or - with Char in JAVA</title><link>https://eunhanlee.github.io/post/what-happen-if-+-or-with-char-in-java/</link><pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-happen-if-+-or-with-char-in-java/</guid><description>Result code result char type + int type return unicode char type - int type error int type + char type return unicode int type - char type error char type + char type return unicode char type - char type return unicode String is not Primitive Data Type. This is object example of use For lexicographical order for (int i = 0; i &amp;lt; order.</description></item><item><title>what is difference between Error and Exception in Java</title><link>https://eunhanlee.github.io/post/what-is-difference-between-error-and-exception-in-java/</link><pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-difference-between-error-and-exception-in-java/</guid><description>What is Error Programs run something that is not what programmers wanted or shutdown unexpectedly. Any causes of that action are Error.
Kinds of Errors compile-time error compile failed. usually, wrong lanuage keyword used. python does not understand &amp;ldquo;System.out.println&amp;rdquo; This code is for JAVA.
runtime error crash during the programs run. put values in int arr[5] that array size is 3
logical error programmer created wrong process. you wanted to put blue in variable x.</description></item><item><title>[JAVA code]reverse node</title><link>https://eunhanlee.github.io/post/java-codereverse-node/</link><pubDate>Thu, 19 Aug 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/java-codereverse-node/</guid><description> public static ListNode reverse(ListNode head) { ListNode prev = null; while (head != null) { ListNode next = head.next; head.next = prev; prev = head; head = next; } return prev; } Time complexity : $O(n)$ Space complexity : $O(1)$ input : head node of LinkedList output : head node of LinkedList</description></item></channel></rss>