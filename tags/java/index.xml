<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on Eunhan's library</title><link>https://eunhanlee.github.io/tags/java/</link><description>Recent content in Java on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Mon, 19 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>what is hashmap in Java</title><link>https://eunhanlee.github.io/post/hashmap/</link><pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/hashmap/</guid><description>Definition Hashmap basically solves the problem of searching objects from large set.
When should we use it large set of objects frequent access to objects required. methods method result time complexity HashMap&amp;lt;String,String&amp;gt; map = new HashMap&amp;lt;&amp;gt;(); create hashmap constructor put( key, value ) add key and value usually O(1) remove( key ) remove the key usually O(1) get( key ) get value from the key usually O(1) isEmpty() T or F for all data O(n) size() return how may keys O(n) containsKey( key ) check key is there usually O(1) containsValue( value ) check value is there usually O(1) getOrDefault( key, value) get value from the key.</description></item><item><title>what is diffence between comparator and compatable in JAVA</title><link>https://eunhanlee.github.io/post/what-is-diffence-between-comparator-and-compatable-in-java/</link><pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-diffence-between-comparator-and-compatable-in-java/</guid><description>Comparable Comparator java.lang package. java.util package. Sorting interface that designed for a condition interface that designed for mutiple conditions Comparable affects the original class Comparator doesn&amp;rsquo;t affect the original class compareTo() method with 1 parameter compare() method with 2 parameters Collections.sort(List) Collections.sort(List, Comparator) Arrays.sort(array) Arrays.sort(array, myComparator); Definition Both interfaces are very similer because they are for sorting lists and arrays.</description></item><item><title>what is comparable in Java</title><link>https://eunhanlee.github.io/post/javacomparable/</link><pubDate>Wed, 14 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/javacomparable/</guid><description>Hierarchy package: java.lang.Comparable
Definition Sorting interface that designed for a condition by overriding compareTo method. For example, you can sort list in ascending order of size.
about the compareTo() method if compareTo() method return positive number, swap the input parameters
else will be remain same
condition return First parameter &amp;lt; second parameter negative First parameter == second parameter 0 First parameter &amp;gt; second parameter positive How to use customObject implements Comparable&amp;lt;&amp;gt;</description></item><item><title>what is comparator in Java</title><link>https://eunhanlee.github.io/post/javacomparator/</link><pubDate>Wed, 14 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/javacomparator/</guid><description>Hierarchy package: java.util.Comparator
Definition Sorting interface that designed for mutiple conditions by creating compare method. For example, you can sort list in ascending order of size and descending order of letters.
about the compare() method if compare() method return positive number, swap the input parameters
else will be remain same
condition return First parameter &amp;lt; second parameter negative First parameter == second parameter 0 First parameter &amp;gt; second parameter positive How to use MyComparator implements Comparator&amp;lt;&amp;gt;</description></item><item><title>what is iterator in Java</title><link>https://eunhanlee.github.io/post/javaiterator/</link><pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/javaiterator/</guid><description>Definition Interface that can read any class in the collection framework.
Thus, we can read arraylist or linkedlist or hashmap with iterator.
why we use iterator? Since we can read any list or set with iterator, we do not have to fix or change code when you work with big projects.
Hierarchy method hasNext() next() remove()
Example List list = new ArrayList();// arrayList list.add(&amp;#34;1&amp;#34;); list.add(&amp;#34;2&amp;#34;); list.add(&amp;#34;3&amp;#34;); Iterator &amp;lt;string&amp;gt; itr = list.</description></item><item><title>[Java]Primitive type and Reference type</title><link>https://eunhanlee.github.io/post/javaprimitive-type-and-reference-type/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/javaprimitive-type-and-reference-type/</guid><description>Primitive type JAVA provides 8 kinds of Primitive type There is no null value. Defult value is already inserted. actual value will saved in Stack memory. String is object. Not primitive type. Data Type Allocated Memory Defult Value Range of Data Range of Data in Number boolean 1 byte false true, false byte 1 byte 0 -127 ~ 128 $-2^{7}$~ $(2^{7}-1)$ short 2 byte 0 -32,768 ~ 32,767 $-2^{15}$~ $(2^{15}-1)$ int 4 byte 0 -2,147,483,648 ~ 2,147,483,647 $-2^{31}$~ $(2^{31}-1)$ long 8 byte 0L -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807 $-2^{63}$~ $(2^{63}-1)$ float 4 byte 0.</description></item><item><title>what happen if + or - with Char in JAVA</title><link>https://eunhanlee.github.io/post/what-happen-if-+-or-with-char-in-java/</link><pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-happen-if-+-or-with-char-in-java/</guid><description>Result code result char type + int type return unicode char type - int type error int type + char type return unicode int type - char type error char type + char type return unicode char type - char type return unicode String is not Primitive Data Type. This is object example of use For lexicographical order for (int i = 0; i &amp;lt; order.</description></item><item><title>[Java] what is difference between Error and Exception in JAVA</title><link>https://eunhanlee.github.io/post/what-is-difference-between-error-and-exception-in-java/</link><pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/what-is-difference-between-error-and-exception-in-java/</guid><description>What is Error Programs run something that is not what programmers wanted or shutdown unexpectedly.
Any causes of that action are Error.
Kinds of Errors compile-time error compile failed. usually, wrong lanuage keyword used. python does not understand &amp;quot;System.out.println&amp;quot; This code is for JAVA.
runtime error crash during the programs run. put values in int arr[5] that array size is 3
logical error programmer created wrong process. you wanted to put blue in variable x.</description></item></channel></rss>