<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Divide and Conquer on Eunhan's library</title><link>https://eunhanlee.github.io/tags/divide-and-conquer/</link><description>Recent content in Divide and Conquer on Eunhan's library</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021. All rights reserved.</copyright><lastBuildDate>Wed, 21 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eunhanlee.github.io/tags/divide-and-conquer/index.xml" rel="self" type="application/rss+xml"/><item><title>Divide and conquer strategy</title><link>https://eunhanlee.github.io/post/divide-and-conquer-strategy/</link><pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate><guid>https://eunhanlee.github.io/post/divide-and-conquer-strategy/</guid><description>Purpose split problem into sub problems as much as possible and merge all of them to answer
Divide and conquer algorithms vs. Dynamic programming? Divide and conquer algorithms does not use subproblems&amp;rsquo; results for other sub problems.
But, dynamic programming uses other resoults of subproblem.
Usually use in.. quick sort merge sort binary sort Fast Fourier Transform (FFT) big data analysis Explanation divide: separate problems that are smaller instances of the same problem conquer: solve the subprolems recursively merge: add all of subanswers to find answer Example merge sort step 1.</description></item></channel></rss>